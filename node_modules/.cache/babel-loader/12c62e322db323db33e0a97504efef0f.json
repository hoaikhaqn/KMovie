{"ast":null,"code":"import _defineProperty from \"/home/h/Source/Project/movie-website/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport app from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firebase-firestore\"; // import { toast } from \"react-toastify\";\n\nimport Config from \"../config\";\n\nclass Firebase {\n  constructor() {\n    this.getUid = user => {\n      !user && (user = this.auth.currentUser);\n      return user && (user.email || user.providerData[0] && user.providerData[0].uid || user.uid);\n    };\n\n    this.checkSession = user => {\n      !user && (user = this.auth.currentUser); // console.log(\"user.metadata.b\", user && user.metadata.b);\n\n      return user && new Date().getTime() - user.metadata.b < 86400000; //1 hour\n    };\n\n    this.getDocWithCondition = (collection, params, key, callback) => {\n      try {\n        const api = this.db.collection(collection).where(params.where[0], params.where[1], params.where[2]).orderBy(params.order ? params.order[0] : \"createdAt\", params.order ? params.order[1] : \"desc\").limit(params.limit ? params.limit : 1000);\n        api.onSnapshot(function (snapshot) {\n          const data = [];\n          snapshot.docs.forEach(doc => {\n            data.push(_objectSpread({}, doc.data(), {\n              id: doc.id\n            }));\n          });\n          callback && callback(data); // var obj = {};\n          // obj[key || collection] = data;\n          // console.log(\"obj\", obj);\n          // callback && callback(obj);\n        });\n        return api.get();\n      } catch (error) {\n        console.error(error);\n      } //   var aData = [];\n      //   var obj = {};\n      //   this.getDataWithCondition(collection, params).then(function(querySnapshot) {\n      //     querySnapshot.forEach(function(doc) {\n      //       aData.push({ ...doc.data(), id: doc.id });\n      //     });\n      //     obj[key || collection] = aData;\n      //     // dispatch({ type: \"GET_LISTDATA\", data: { ...obj } });\n      //     return obj;\n      //   });\n\n    };\n\n    app.initializeApp(Config._env.firebase);\n    this.auth = app.auth();\n    this.db = app.firestore();\n    this.authGoogle = new app.auth.GoogleAuthProvider();\n    this.authGoogle.setCustomParameters({\n      prompt: \"select_account\"\n    });\n    this.authFacebook = new app.auth.FacebookAuthProvider();\n    this.authFacebook.setCustomParameters({\n      prompt: \"select_account\"\n    });\n  }\n\n  isInitialized() {\n    return new Promise(resolve => {\n      this.auth.onAuthStateChanged(resolve);\n    });\n  }\n\n  getCurrentUsername() {\n    return this.auth.currentUser;\n  }\n\n  getUserLogIn() {\n    return this.db.doc(\"account/\" + this.getUid()).get();\n  }\n\n  logout() {\n    return this.auth.signOut();\n  } //------------------------------------------------------------------------//\n\n\n  getDataWithCondition(c, p) {\n    return p ? this.db.collection(c).where(p.where[0], p.where[1], p.where[2]).orderBy(p.order ? p.order[0] : \"createdAt\", p.order ? p.order[1] : \"desc\").limit(p.limit ? p.limit : 1000).get(p.get && p.get) : this.db.collection(c).get();\n  }\n\n  getData(c, p) {\n    return p ? this.db.collection(c).orderBy(p.order ? p.order[0] : \"createdAt\", p.order ? p.order[1] : \"desc\").limit(p.limit ? p.limit : 1000).get(p.get && p.get) : this.db.collection(c).get();\n  }\n\n  getMovieItem(id) {\n    return this.db.collection(\"movie\").doc(id).get();\n  }\n\n  setMovieItem(id, data) {\n    return this.db.collection(\"movie\").doc(id).set(data);\n  } // ----------\n\n\n}\n\nexport default new Firebase();","map":{"version":3,"sources":["/home/h/Source/Project/movie-website/src/context/firebase.js"],"names":["app","Config","Firebase","constructor","getUid","user","auth","currentUser","email","providerData","uid","checkSession","Date","getTime","metadata","b","getDocWithCondition","collection","params","key","callback","api","db","where","orderBy","order","limit","onSnapshot","snapshot","data","docs","forEach","doc","push","id","get","error","console","initializeApp","_env","firebase","firestore","authGoogle","GoogleAuthProvider","setCustomParameters","prompt","authFacebook","FacebookAuthProvider","isInitialized","Promise","resolve","onAuthStateChanged","getCurrentUsername","getUserLogIn","logout","signOut","getDataWithCondition","c","p","getData","getMovieItem","setMovieItem","set"],"mappings":"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","sourcesContent":["import app from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firebase-firestore\";\n// import { toast } from \"react-toastify\";\nimport Config from \"../config\";\nclass Firebase {\n  constructor() {\n    app.initializeApp(Config._env.firebase);\n    this.auth = app.auth();\n    this.db = app.firestore();\n    this.authGoogle = new app.auth.GoogleAuthProvider();\n    this.authGoogle.setCustomParameters({\n      prompt: \"select_account\"\n    });\n    this.authFacebook = new app.auth.FacebookAuthProvider();\n    this.authFacebook.setCustomParameters({\n      prompt: \"select_account\"\n    });\n  }\n  isInitialized() {\n    return new Promise(resolve => {\n      this.auth.onAuthStateChanged(resolve);\n    });\n  }\n  getCurrentUsername() {\n    return this.auth.currentUser;\n  }\n  getUserLogIn() {\n    return this.db.doc(\"account/\" + this.getUid()).get();\n  }\n  getUid = user => {\n    !user && (user = this.auth.currentUser);\n    return user && (user.email || (user.providerData[0] && user.providerData[0].uid) || user.uid);\n  };\n  checkSession = user => {\n    !user && (user = this.auth.currentUser);\n    // console.log(\"user.metadata.b\", user && user.metadata.b);\n    return user && new Date().getTime() - user.metadata.b < 86400000; //1 hour\n  };\n\n  logout() {\n    return this.auth.signOut();\n  }\n  //------------------------------------------------------------------------//\n  getDataWithCondition(c, p) {\n    return p\n      ? this.db\n          .collection(c)\n          .where(p.where[0], p.where[1], p.where[2])\n          .orderBy(p.order ? p.order[0] : \"createdAt\", p.order ? p.order[1] : \"desc\")\n          .limit(p.limit ? p.limit : 1000)\n          .get(p.get && p.get)\n      : this.db.collection(c).get();\n  }\n  getData(c, p) {\n    return p\n      ? this.db\n          .collection(c)\n          .orderBy(p.order ? p.order[0] : \"createdAt\", p.order ? p.order[1] : \"desc\")\n          .limit(p.limit ? p.limit : 1000)\n          .get(p.get && p.get)\n      : this.db.collection(c).get();\n  }\n  getMovieItem(id) {\n    return this.db\n      .collection(\"movie\")\n      .doc(id)\n      .get();\n  }\n  setMovieItem(id, data) {\n    return this.db\n      .collection(\"movie\")\n      .doc(id)\n      .set(data);\n  }\n\n  // ----------\n  getDocWithCondition = (collection, params, key, callback) => {\n    try {\n      const api = this.db\n        .collection(collection)\n        .where(params.where[0], params.where[1], params.where[2])\n        .orderBy(params.order ? params.order[0] : \"createdAt\", params.order ? params.order[1] : \"desc\")\n        .limit(params.limit ? params.limit : 1000);\n      api.onSnapshot(function(snapshot) {\n        const data = [];\n        snapshot.docs.forEach(doc => {\n          data.push({ ...doc.data(), id: doc.id });\n        });\n        callback && callback(data);\n        // var obj = {};\n        // obj[key || collection] = data;\n        // console.log(\"obj\", obj);\n        // callback && callback(obj);\n      });\n      return api.get();\n    } catch (error) {\n      console.error(error);\n    }\n\n    //   var aData = [];\n    //   var obj = {};\n    //   this.getDataWithCondition(collection, params).then(function(querySnapshot) {\n    //     querySnapshot.forEach(function(doc) {\n    //       aData.push({ ...doc.data(), id: doc.id });\n    //     });\n    //     obj[key || collection] = aData;\n    //     // dispatch({ type: \"GET_LISTDATA\", data: { ...obj } });\n    //     return obj;\n    //   });\n  };\n}\n\nexport default new Firebase();\n"]},"metadata":{},"sourceType":"module"}