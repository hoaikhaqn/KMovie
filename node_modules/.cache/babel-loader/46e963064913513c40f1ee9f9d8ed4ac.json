{"ast":null,"code":"import _defineProperty from \"/home/h/Source/Project/movie-website/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport app from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firebase-firestore\"; // import { toast } from \"react-toastify\";\n\nimport Config from \"../config\";\n\nclass Firebase {\n  constructor() {\n    this.getUid = user => {\n      !user && (user = this.auth.currentUser);\n      return user && (user.email || user.providerData[0] && user.providerData[0].uid || user.uid);\n    };\n\n    this.checkSession = user => {\n      !user && (user = this.auth.currentUser); // console.log(\"user.metadata.b\", user && user.metadata.b);\n\n      return user && new Date().getTime() - user.metadata.b < 86400000; //1 hour\n    };\n\n    this.getDocWithCondition = (collection, params, key, callback) => {\n      try {\n        var api;\n        params.where && params.where.map(function (item) {\n          api = this.db.collection(collection).where(params.where[0], params.where[1], params.where[2]).orderBy(params.order ? params.order[0] : \"createdAt\", params.order ? params.order[1] : \"desc\").limit(params.limit ? params.limit : 1000);\n          api.onSnapshot(function (snapshot) {\n            const data = [];\n            snapshot.docs.forEach(doc => {\n              data.push(_objectSpread({}, doc.data(), {\n                id: doc.id\n              }));\n            });\n            console.log(\"data\", data);\n            callback && callback(data); // var obj = {};\n            // obj[key || collection] = data;\n            // console.log(\"obj\", obj);\n            // callback && callback(obj);\n          });\n        });\n        return api.get();\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    app.initializeApp(Config._env.firebase);\n    this.auth = app.auth();\n    this.db = app.firestore();\n    this.authGoogle = new app.auth.GoogleAuthProvider();\n    this.authGoogle.setCustomParameters({\n      prompt: \"select_account\"\n    });\n    this.authFacebook = new app.auth.FacebookAuthProvider();\n    this.authFacebook.setCustomParameters({\n      prompt: \"select_account\"\n    });\n  }\n\n  isInitialized() {\n    return new Promise(resolve => {\n      this.auth.onAuthStateChanged(resolve);\n    });\n  }\n\n  getCurrentUsername() {\n    return this.auth.currentUser;\n  }\n\n  getUserLogIn() {\n    return this.db.doc(\"account/\" + this.getUid()).get();\n  }\n\n  logout() {\n    return this.auth.signOut();\n  } //------------------------------------------------------------------------//\n\n\n  getDataWithCondition(c, p) {\n    return p ? this.db.collection(c).where(p.where[0], p.where[1], p.where[2]).orderBy(p.order ? p.order[0] : \"createdAt\", p.order ? p.order[1] : \"desc\").limit(p.limit ? p.limit : 1000).get(p.get && p.get) : this.db.collection(c).get();\n  }\n\n  getData(c, p) {\n    return p ? this.db.collection(c).orderBy(p.order ? p.order[0] : \"createdAt\", p.order ? p.order[1] : \"desc\").limit(p.limit ? p.limit : 1000).get(p.get && p.get) : this.db.collection(c).get();\n  }\n\n  getMovieItem(id) {\n    return this.db.collection(\"movie\").doc(id).get();\n  }\n\n  setMovieItem(id, data) {\n    return this.db.collection(\"movie\").doc(id).set(data);\n  } // ----------\n\n\n}\n\nexport default new Firebase();","map":{"version":3,"sources":["/home/h/Source/Project/movie-website/src/context/firebase.js"],"names":["app","Config","Firebase","constructor","getUid","user","auth","currentUser","email","providerData","uid","checkSession","Date","getTime","metadata","b","getDocWithCondition","collection","params","key","callback","api","where","map","item","db","orderBy","order","limit","onSnapshot","snapshot","data","docs","forEach","doc","push","id","console","log","get","error","initializeApp","_env","firebase","firestore","authGoogle","GoogleAuthProvider","setCustomParameters","prompt","authFacebook","FacebookAuthProvider","isInitialized","Promise","resolve","onAuthStateChanged","getCurrentUsername","getUserLogIn","logout","signOut","getDataWithCondition","c","p","getData","getMovieItem","setMovieItem","set"],"mappings":";;;;;;AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,OAAO,eAAP;AACA,OAAO,6BAAP,C,CACA;;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AACA,MAAMC,QAAN,CAAe;AACbC,EAAAA,WAAW,GAAG;AAAA,SAwBdC,MAxBc,GAwBLC,IAAI,IAAI;AACf,OAACA,IAAD,KAAUA,IAAI,GAAG,KAAKC,IAAL,CAAUC,WAA3B;AACA,aAAOF,IAAI,KAAKA,IAAI,CAACG,KAAL,IAAeH,IAAI,CAACI,YAAL,CAAkB,CAAlB,KAAwBJ,IAAI,CAACI,YAAL,CAAkB,CAAlB,EAAqBC,GAA5D,IAAoEL,IAAI,CAACK,GAA9E,CAAX;AACD,KA3Ba;;AAAA,SA4BdC,YA5Bc,GA4BCN,IAAI,IAAI;AACrB,OAACA,IAAD,KAAUA,IAAI,GAAG,KAAKC,IAAL,CAAUC,WAA3B,EADqB,CAErB;;AACA,aAAOF,IAAI,IAAI,IAAIO,IAAJ,GAAWC,OAAX,KAAuBR,IAAI,CAACS,QAAL,CAAcC,CAArC,GAAyC,QAAxD,CAHqB,CAG6C;AACnE,KAhCa;;AAAA,SAuEdC,mBAvEc,GAuEQ,CAACC,UAAD,EAAaC,MAAb,EAAqBC,GAArB,EAA0BC,QAA1B,KAAuC;AAC3D,UAAI;AACF,YAAIC,GAAJ;AACAH,QAAAA,MAAM,CAACI,KAAP,IAAgBJ,MAAM,CAACI,KAAP,CAAaC,GAAb,CAAiB,UAAUC,IAAV,EAAgB;AAC/CH,UAAAA,GAAG,GAAG,KAAKI,EAAL,CACHR,UADG,CACQA,UADR,EAEHK,KAFG,CAEGJ,MAAM,CAACI,KAAP,CAAa,CAAb,CAFH,EAEoBJ,MAAM,CAACI,KAAP,CAAa,CAAb,CAFpB,EAEqCJ,MAAM,CAACI,KAAP,CAAa,CAAb,CAFrC,EAGHI,OAHG,CAGKR,MAAM,CAACS,KAAP,GAAeT,MAAM,CAACS,KAAP,CAAa,CAAb,CAAf,GAAiC,WAHtC,EAGmDT,MAAM,CAACS,KAAP,GAAeT,MAAM,CAACS,KAAP,CAAa,CAAb,CAAf,GAAiC,MAHpF,EAIHC,KAJG,CAIGV,MAAM,CAACU,KAAP,GAAeV,MAAM,CAACU,KAAtB,GAA8B,IAJjC,CAAN;AAKAP,UAAAA,GAAG,CAACQ,UAAJ,CAAe,UAAUC,QAAV,EAAoB;AACjC,kBAAMC,IAAI,GAAG,EAAb;AACAD,YAAAA,QAAQ,CAACE,IAAT,CAAcC,OAAd,CAAsBC,GAAG,IAAI;AAC3BH,cAAAA,IAAI,CAACI,IAAL,mBACKD,GAAG,CAACH,IAAJ,EADL;AAEEK,gBAAAA,EAAE,EAAEF,GAAG,CAACE;AAFV;AAID,aALD;AAMAC,YAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBP,IAAnB;AAEAX,YAAAA,QAAQ,IAAIA,QAAQ,CAACW,IAAD,CAApB,CAViC,CAWjC;AACA;AACA;AACA;AACD,WAfD;AAgBD,SAtBe,CAAhB;AAuBA,eAAOV,GAAG,CAACkB,GAAJ,EAAP;AACD,OA1BD,CA0BE,OAAOC,KAAP,EAAc;AACdH,QAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd;AACD;AACF,KArGa;;AACZxC,IAAAA,GAAG,CAACyC,aAAJ,CAAkBxC,MAAM,CAACyC,IAAP,CAAYC,QAA9B;AACA,SAAKrC,IAAL,GAAYN,GAAG,CAACM,IAAJ,EAAZ;AACA,SAAKmB,EAAL,GAAUzB,GAAG,CAAC4C,SAAJ,EAAV;AACA,SAAKC,UAAL,GAAkB,IAAI7C,GAAG,CAACM,IAAJ,CAASwC,kBAAb,EAAlB;AACA,SAAKD,UAAL,CAAgBE,mBAAhB,CAAoC;AAClCC,MAAAA,MAAM,EAAE;AAD0B,KAApC;AAGA,SAAKC,YAAL,GAAoB,IAAIjD,GAAG,CAACM,IAAJ,CAAS4C,oBAAb,EAApB;AACA,SAAKD,YAAL,CAAkBF,mBAAlB,CAAsC;AACpCC,MAAAA,MAAM,EAAE;AAD4B,KAAtC;AAGD;;AACDG,EAAAA,aAAa,GAAG;AACd,WAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAC5B,WAAK/C,IAAL,CAAUgD,kBAAV,CAA6BD,OAA7B;AACD,KAFM,CAAP;AAGD;;AACDE,EAAAA,kBAAkB,GAAG;AACnB,WAAO,KAAKjD,IAAL,CAAUC,WAAjB;AACD;;AACDiD,EAAAA,YAAY,GAAG;AACb,WAAO,KAAK/B,EAAL,CAAQS,GAAR,CAAY,aAAa,KAAK9B,MAAL,EAAzB,EAAwCmC,GAAxC,EAAP;AACD;;AAWDkB,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKnD,IAAL,CAAUoD,OAAV,EAAP;AACD,GArCY,CAsCb;;;AACAC,EAAAA,oBAAoB,CAACC,CAAD,EAAIC,CAAJ,EAAO;AACzB,WAAOA,CAAC,GACN,KAAKpC,EAAL,CACCR,UADD,CACY2C,CADZ,EAECtC,KAFD,CAEOuC,CAAC,CAACvC,KAAF,CAAQ,CAAR,CAFP,EAEmBuC,CAAC,CAACvC,KAAF,CAAQ,CAAR,CAFnB,EAE+BuC,CAAC,CAACvC,KAAF,CAAQ,CAAR,CAF/B,EAGCI,OAHD,CAGSmC,CAAC,CAAClC,KAAF,GAAUkC,CAAC,CAAClC,KAAF,CAAQ,CAAR,CAAV,GAAuB,WAHhC,EAG6CkC,CAAC,CAAClC,KAAF,GAAUkC,CAAC,CAAClC,KAAF,CAAQ,CAAR,CAAV,GAAuB,MAHpE,EAICC,KAJD,CAIOiC,CAAC,CAACjC,KAAF,GAAUiC,CAAC,CAACjC,KAAZ,GAAoB,IAJ3B,EAKCW,GALD,CAKKsB,CAAC,CAACtB,GAAF,IAASsB,CAAC,CAACtB,GALhB,CADM,GAON,KAAKd,EAAL,CAAQR,UAAR,CAAmB2C,CAAnB,EAAsBrB,GAAtB,EAPF;AAQD;;AACDuB,EAAAA,OAAO,CAACF,CAAD,EAAIC,CAAJ,EAAO;AACZ,WAAOA,CAAC,GACN,KAAKpC,EAAL,CACCR,UADD,CACY2C,CADZ,EAEClC,OAFD,CAESmC,CAAC,CAAClC,KAAF,GAAUkC,CAAC,CAAClC,KAAF,CAAQ,CAAR,CAAV,GAAuB,WAFhC,EAE6CkC,CAAC,CAAClC,KAAF,GAAUkC,CAAC,CAAClC,KAAF,CAAQ,CAAR,CAAV,GAAuB,MAFpE,EAGCC,KAHD,CAGOiC,CAAC,CAACjC,KAAF,GAAUiC,CAAC,CAACjC,KAAZ,GAAoB,IAH3B,EAICW,GAJD,CAIKsB,CAAC,CAACtB,GAAF,IAASsB,CAAC,CAACtB,GAJhB,CADM,GAMN,KAAKd,EAAL,CAAQR,UAAR,CAAmB2C,CAAnB,EAAsBrB,GAAtB,EANF;AAOD;;AACDwB,EAAAA,YAAY,CAAC3B,EAAD,EAAK;AACf,WAAO,KAAKX,EAAL,CACJR,UADI,CACO,OADP,EAEJiB,GAFI,CAEAE,EAFA,EAGJG,GAHI,EAAP;AAID;;AACDyB,EAAAA,YAAY,CAAC5B,EAAD,EAAKL,IAAL,EAAW;AACrB,WAAO,KAAKN,EAAL,CACJR,UADI,CACO,OADP,EAEJiB,GAFI,CAEAE,EAFA,EAGJ6B,GAHI,CAGAlC,IAHA,CAAP;AAID,GArEY,CAuEb;;;AAvEa;;AAyGf,eAAe,IAAI7B,QAAJ,EAAf","sourcesContent":["import app from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firebase-firestore\";\n// import { toast } from \"react-toastify\";\nimport Config from \"../config\";\nclass Firebase {\n  constructor() {\n    app.initializeApp(Config._env.firebase);\n    this.auth = app.auth();\n    this.db = app.firestore();\n    this.authGoogle = new app.auth.GoogleAuthProvider();\n    this.authGoogle.setCustomParameters({\n      prompt: \"select_account\"\n    });\n    this.authFacebook = new app.auth.FacebookAuthProvider();\n    this.authFacebook.setCustomParameters({\n      prompt: \"select_account\"\n    });\n  }\n  isInitialized() {\n    return new Promise(resolve => {\n      this.auth.onAuthStateChanged(resolve);\n    });\n  }\n  getCurrentUsername() {\n    return this.auth.currentUser;\n  }\n  getUserLogIn() {\n    return this.db.doc(\"account/\" + this.getUid()).get();\n  }\n  getUid = user => {\n    !user && (user = this.auth.currentUser);\n    return user && (user.email || (user.providerData[0] && user.providerData[0].uid) || user.uid);\n  };\n  checkSession = user => {\n    !user && (user = this.auth.currentUser);\n    // console.log(\"user.metadata.b\", user && user.metadata.b);\n    return user && new Date().getTime() - user.metadata.b < 86400000; //1 hour\n  };\n\n  logout() {\n    return this.auth.signOut();\n  }\n  //------------------------------------------------------------------------//\n  getDataWithCondition(c, p) {\n    return p ?\n      this.db\n      .collection(c)\n      .where(p.where[0], p.where[1], p.where[2])\n      .orderBy(p.order ? p.order[0] : \"createdAt\", p.order ? p.order[1] : \"desc\")\n      .limit(p.limit ? p.limit : 1000)\n      .get(p.get && p.get) :\n      this.db.collection(c).get();\n  }\n  getData(c, p) {\n    return p ?\n      this.db\n      .collection(c)\n      .orderBy(p.order ? p.order[0] : \"createdAt\", p.order ? p.order[1] : \"desc\")\n      .limit(p.limit ? p.limit : 1000)\n      .get(p.get && p.get) :\n      this.db.collection(c).get();\n  }\n  getMovieItem(id) {\n    return this.db\n      .collection(\"movie\")\n      .doc(id)\n      .get();\n  }\n  setMovieItem(id, data) {\n    return this.db\n      .collection(\"movie\")\n      .doc(id)\n      .set(data);\n  }\n\n  // ----------\n  getDocWithCondition = (collection, params, key, callback) => {\n    try {\n      var api;\n      params.where && params.where.map(function (item) {\n        api = this.db\n          .collection(collection)\n          .where(params.where[0], params.where[1], params.where[2])\n          .orderBy(params.order ? params.order[0] : \"createdAt\", params.order ? params.order[1] : \"desc\")\n          .limit(params.limit ? params.limit : 1000);\n        api.onSnapshot(function (snapshot) {\n          const data = [];\n          snapshot.docs.forEach(doc => {\n            data.push({\n              ...doc.data(),\n              id: doc.id\n            });\n          });\n          console.log(\"data\",data);\n          \n          callback && callback(data);\n          // var obj = {};\n          // obj[key || collection] = data;\n          // console.log(\"obj\", obj);\n          // callback && callback(obj);\n        });\n      })\n      return api.get();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n}\n\nexport default new Firebase();"]},"metadata":{},"sourceType":"module"}