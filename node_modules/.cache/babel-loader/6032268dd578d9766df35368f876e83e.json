{"ast":null,"code":"import _defineProperty from \"/home/h/Source/Project/movie-website/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FireSQL } from 'firesql';\nimport app from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firebase-firestore\"; // import { toast } from \"react-toastify\";\n\nimport Config from \"../config\";\n\nclass Firebase {\n  constructor() {\n    this.getUid = user => {\n      !user && (user = this.auth.currentUser);\n      return user && (user.email || user.providerData[0] && user.providerData[0].uid || user.uid);\n    };\n\n    this.checkSession = user => {\n      !user && (user = this.auth.currentUser); // console.log(\"user.metadata.b\", user && user.metadata.b);\n\n      return user && new Date().getTime() - user.metadata.b < 86400000; //1 hour\n    };\n\n    this.getDocWithCondition = (collection, params, key, callback) => {\n      try {\n        this.db.collection(collection).where(\"\").orderBy(params.order ? params.order[0] : \"createdAt\", params.order ? params.order[1] : \"desc\").limit(params.limit ? params.limit : 1000);\n        console.log(query);\n        api = eval(query);\n        api.onSnapshot(function (snapshot) {\n          const data = [];\n          snapshot.docs.forEach(doc => {\n            data.push(_objectSpread({}, doc.data(), {\n              id: doc.id\n            }));\n          });\n          console.log(\"data\", data);\n          callback && callback(data);\n        }); // return api.get();\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    this.getDocWithMultiCondition = (collection, params, key, callback) => {\n      try {\n        var api;\n        var where = \"\";\n        params.where && params.where.map(function (item) {\n          console.log(item);\n\n          if (typeof item[1] == \"object\") {\n            where += \".where('\" + item[0] + \".\" + item[1].id + \"','==','\" + item[1].name + \"')\";\n          } else {\n            where += \".where('\" + item[0] + \"','==','\" + item[1] + \"')\";\n          }\n        });\n        let query = 'this.db.collection(collection)' + where + '.orderBy(params.order ? params.order[0] : \"createdAt\", params.order ? params.order[1] : \"desc\")' + '.limit(params.limit ? params.limit : 1000)';\n        console.log(query);\n        api = eval(query);\n        api.onSnapshot(function (snapshot) {\n          const data = [];\n          snapshot.docs.forEach(doc => {\n            data.push(_objectSpread({}, doc.data(), {\n              id: doc.id\n            }));\n          });\n          console.log(\"data\", data);\n          callback && callback(data);\n        }); // return api.get();\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    this.getDocWithMultiConditionSQL = (collection, params, key, callback) => {\n      try {\n        var where = \"\";\n\n        if (params.where) {\n          where = \" WHERE \";\n          params.where.map(function (item, idx) {\n            console.log(idx);\n\n            if (typeof item[1] == \"object\") {\n              let item;\n              item[2].map(function (item, idx) {});\n              where += (idx == 0 ? \"\" : \" AND \") + \"`\" + item[0] + \"` IN '\" + item[1].id + \"'\";\n            } else {\n              where += (idx == 0 ? \"\" : \" AND \") + \"`\" + item[0] + \"` = '\" + item[1] + \"'\";\n            }\n          });\n        }\n\n        let query = 'SELECT * FROM ' + collection + where + ' ORDER BY createdAt DESC' + ' LIMIT 2';\n        console.log(\"QUERY\", query);\n        const api = this.fireSQL.query(query);\n        api.then(data => {\n          console.log(\"data\", data);\n          callback && callback(data);\n        }); // return api.get();\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    app.initializeApp(Config._env.firebase);\n    this.auth = app.auth();\n    this.db = app.firestore();\n    this.fireSQL = new FireSQL(this.db);\n    this.authGoogle = new app.auth.GoogleAuthProvider();\n    this.authGoogle.setCustomParameters({\n      prompt: \"select_account\"\n    });\n    this.authFacebook = new app.auth.FacebookAuthProvider();\n    this.authFacebook.setCustomParameters({\n      prompt: \"select_account\"\n    });\n  }\n\n  isInitialized() {\n    return new Promise(resolve => {\n      this.auth.onAuthStateChanged(resolve);\n    });\n  }\n\n  getCurrentUsername() {\n    return this.auth.currentUser;\n  }\n\n  getUserLogIn() {\n    return this.db.doc(\"account/\" + this.getUid()).get();\n  }\n\n  logout() {\n    return this.auth.signOut();\n  } //------------------------------------------------------------------------//\n\n\n  getDataWithCondition(c, p) {\n    return p ? this.db.collection(c).where(p.where[0], p.where[1], p.where[2]).orderBy(p.order ? p.order[0] : \"createdAt\", p.order ? p.order[1] : \"desc\").limit(p.limit ? p.limit : 1000).get(p.get && p.get) : this.db.collection(c).get();\n  }\n\n  getData(c, p) {\n    return p ? this.db.collection(c).orderBy(p.order ? p.order[0] : \"createdAt\", p.order ? p.order[1] : \"desc\").limit(p.limit ? p.limit : 1000).get(p.get && p.get) : this.db.collection(c).get();\n  }\n\n  getMovieItem(id) {\n    return this.db.collection(\"movie\").doc(id).get();\n  }\n\n  setMovieItem(id, data) {\n    return this.db.collection(\"movie\").doc(id).set(data);\n  } // ----------\n\n\n}\n\nexport default new Firebase();","map":{"version":3,"sources":["/home/h/Source/Project/movie-website/src/context/firebase.js"],"names":["FireSQL","app","Config","Firebase","constructor","getUid","user","auth","currentUser","email","providerData","uid","checkSession","Date","getTime","metadata","b","getDocWithCondition","collection","params","key","callback","db","where","orderBy","order","limit","console","log","query","api","eval","onSnapshot","snapshot","data","docs","forEach","doc","push","id","error","getDocWithMultiCondition","map","item","name","getDocWithMultiConditionSQL","idx","fireSQL","then","initializeApp","_env","firebase","firestore","authGoogle","GoogleAuthProvider","setCustomParameters","prompt","authFacebook","FacebookAuthProvider","isInitialized","Promise","resolve","onAuthStateChanged","getCurrentUsername","getUserLogIn","get","logout","signOut","getDataWithCondition","c","p","getData","getMovieItem","setMovieItem","set"],"mappings":";;;;;;AAAA,SACEA,OADF,QAEO,SAFP;AAGA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAO,eAAP;AACA,OAAO,6BAAP,C,CACA;;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AACA,MAAMC,QAAN,CAAe;AACbC,EAAAA,WAAW,GAAG;AAAA,SAyBdC,MAzBc,GAyBLC,IAAI,IAAI;AACf,OAACA,IAAD,KAAUA,IAAI,GAAG,KAAKC,IAAL,CAAUC,WAA3B;AACA,aAAOF,IAAI,KAAKA,IAAI,CAACG,KAAL,IAAeH,IAAI,CAACI,YAAL,CAAkB,CAAlB,KAAwBJ,IAAI,CAACI,YAAL,CAAkB,CAAlB,EAAqBC,GAA5D,IAAoEL,IAAI,CAACK,GAA9E,CAAX;AACD,KA5Ba;;AAAA,SA6BdC,YA7Bc,GA6BCN,IAAI,IAAI;AACrB,OAACA,IAAD,KAAUA,IAAI,GAAG,KAAKC,IAAL,CAAUC,WAA3B,EADqB,CAErB;;AACA,aAAOF,IAAI,IAAI,IAAIO,IAAJ,GAAWC,OAAX,KAAuBR,IAAI,CAACS,QAAL,CAAcC,CAArC,GAAyC,QAAxD,CAHqB,CAG6C;AACnE,KAjCa;;AAAA,SAwEdC,mBAxEc,GAwEQ,CAACC,UAAD,EAAaC,MAAb,EAAqBC,GAArB,EAA0BC,QAA1B,KAAuC;AAC3D,UAAI;AACF,aAAKC,EAAL,CAAQJ,UAAR,CAAmBA,UAAnB,EACCK,KADD,CACO,EADP,EAECC,OAFD,CAESL,MAAM,CAACM,KAAP,GAAeN,MAAM,CAACM,KAAP,CAAa,CAAb,CAAf,GAAiC,WAF1C,EAEuDN,MAAM,CAACM,KAAP,GAAeN,MAAM,CAACM,KAAP,CAAa,CAAb,CAAf,GAAiC,MAFxF,EAGCC,KAHD,CAGOP,MAAM,CAACO,KAAP,GAAeP,MAAM,CAACO,KAAtB,GAA8B,IAHrC;AAIAC,QAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACAC,QAAAA,GAAG,GAAGC,IAAI,CAACF,KAAD,CAAV;AACAC,QAAAA,GAAG,CAACE,UAAJ,CAAe,UAAUC,QAAV,EAAoB;AACjC,gBAAMC,IAAI,GAAG,EAAb;AACAD,UAAAA,QAAQ,CAACE,IAAT,CAAcC,OAAd,CAAsBC,GAAG,IAAI;AAC3BH,YAAAA,IAAI,CAACI,IAAL,mBACKD,GAAG,CAACH,IAAJ,EADL;AAEEK,cAAAA,EAAE,EAAEF,GAAG,CAACE;AAFV;AAID,WALD;AAMAZ,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBM,IAApB;AACAb,UAAAA,QAAQ,IAAIA,QAAQ,CAACa,IAAD,CAApB;AACD,SAVD,EAPE,CAkBF;AACD,OAnBD,CAmBE,OAAOM,KAAP,EAAc;AACdb,QAAAA,OAAO,CAACa,KAAR,CAAcA,KAAd;AACD;AACF,KA/Fa;;AAAA,SAgGdC,wBAhGc,GAgGa,CAACvB,UAAD,EAAaC,MAAb,EAAqBC,GAArB,EAA0BC,QAA1B,KAAuC;AAChE,UAAI;AACF,YAAIS,GAAJ;AACA,YAAIP,KAAK,GAAG,EAAZ;AACAJ,QAAAA,MAAM,CAACI,KAAP,IAAgBJ,MAAM,CAACI,KAAP,CAAamB,GAAb,CAAiB,UAAUC,IAAV,EAAgB;AAC/ChB,UAAAA,OAAO,CAACC,GAAR,CAAYe,IAAZ;;AACA,cAAI,OAAOA,IAAI,CAAC,CAAD,CAAX,IAAkB,QAAtB,EAAgC;AAC9BpB,YAAAA,KAAK,IAAI,aAAaoB,IAAI,CAAC,CAAD,CAAjB,GAAuB,GAAvB,GAA6BA,IAAI,CAAC,CAAD,CAAJ,CAAQJ,EAArC,GAA0C,UAA1C,GAAuDI,IAAI,CAAC,CAAD,CAAJ,CAAQC,IAA/D,GAAsE,IAA/E;AACD,WAFD,MAEO;AACLrB,YAAAA,KAAK,IAAI,aAAaoB,IAAI,CAAC,CAAD,CAAjB,GAAuB,UAAvB,GAAoCA,IAAI,CAAC,CAAD,CAAxC,GAA8C,IAAvD;AACD;AACF,SAPe,CAAhB;AAQA,YAAId,KAAK,GAAG,mCACVN,KADU,GAEV,iGAFU,GAGV,4CAHF;AAIAI,QAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACAC,QAAAA,GAAG,GAAGC,IAAI,CAACF,KAAD,CAAV;AACAC,QAAAA,GAAG,CAACE,UAAJ,CAAe,UAAUC,QAAV,EAAoB;AACjC,gBAAMC,IAAI,GAAG,EAAb;AACAD,UAAAA,QAAQ,CAACE,IAAT,CAAcC,OAAd,CAAsBC,GAAG,IAAI;AAC3BH,YAAAA,IAAI,CAACI,IAAL,mBACKD,GAAG,CAACH,IAAJ,EADL;AAEEK,cAAAA,EAAE,EAAEF,GAAG,CAACE;AAFV;AAID,WALD;AAMAZ,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBM,IAApB;AACAb,UAAAA,QAAQ,IAAIA,QAAQ,CAACa,IAAD,CAApB;AACD,SAVD,EAjBE,CA4BF;AACD,OA7BD,CA6BE,OAAOM,KAAP,EAAc;AACdb,QAAAA,OAAO,CAACa,KAAR,CAAcA,KAAd;AACD;AACF,KAjIa;;AAAA,SAkIdK,2BAlIc,GAkIgB,CAAC3B,UAAD,EAAaC,MAAb,EAAqBC,GAArB,EAA0BC,QAA1B,KAAuC;AACnE,UAAI;AACF,YAAIE,KAAK,GAAG,EAAZ;;AACA,YAAIJ,MAAM,CAACI,KAAX,EAAkB;AAChBA,UAAAA,KAAK,GAAG,SAAR;AACAJ,UAAAA,MAAM,CAACI,KAAP,CAAamB,GAAb,CAAiB,UAAUC,IAAV,EAAgBG,GAAhB,EAAqB;AACpCnB,YAAAA,OAAO,CAACC,GAAR,CAAYkB,GAAZ;;AACA,gBAAI,OAAOH,IAAI,CAAC,CAAD,CAAX,IAAkB,QAAtB,EAAgC;AAC9B,kBAAIA,IAAJ;AACAA,cAAAA,IAAI,CAAC,CAAD,CAAJ,CAAQD,GAAR,CAAY,UAAUC,IAAV,EAAgBG,GAAhB,EAAqB,CAEhC,CAFD;AAGAvB,cAAAA,KAAK,IAAI,CAACuB,GAAG,IAAI,CAAP,GAAW,EAAX,GAAgB,OAAjB,IAA4B,GAA5B,GAAkCH,IAAI,CAAC,CAAD,CAAtC,GAA4C,QAA5C,GAAuDA,IAAI,CAAC,CAAD,CAAJ,CAAQJ,EAA/D,GAAoE,GAA7E;AACD,aAND,MAMO;AACLhB,cAAAA,KAAK,IAAI,CAACuB,GAAG,IAAI,CAAP,GAAW,EAAX,GAAgB,OAAjB,IAA4B,GAA5B,GAAkCH,IAAI,CAAC,CAAD,CAAtC,GAA4C,OAA5C,GAAsDA,IAAI,CAAC,CAAD,CAA1D,GAAgE,GAAzE;AACD;AACF,WAXD;AAYD;;AAED,YAAId,KAAK,GAAG,mBAAmBX,UAAnB,GACVK,KADU,GAEV,0BAFU,GAGV,UAHF;AAIAI,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,KAArB;AACA,cAAMC,GAAG,GAAG,KAAKiB,OAAL,CAAalB,KAAb,CAAmBA,KAAnB,CAAZ;AACAC,QAAAA,GAAG,CAACkB,IAAJ,CAASd,IAAI,IAAI;AACfP,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBM,IAApB;AACAb,UAAAA,QAAQ,IAAIA,QAAQ,CAACa,IAAD,CAApB;AACD,SAHD,EAxBE,CA4BF;AACD,OA7BD,CA6BE,OAAOM,KAAP,EAAc;AACdb,QAAAA,OAAO,CAACa,KAAR,CAAcA,KAAd;AACD;AACF,KAnKa;;AACZvC,IAAAA,GAAG,CAACgD,aAAJ,CAAkB/C,MAAM,CAACgD,IAAP,CAAYC,QAA9B;AACA,SAAK5C,IAAL,GAAYN,GAAG,CAACM,IAAJ,EAAZ;AACA,SAAKe,EAAL,GAAUrB,GAAG,CAACmD,SAAJ,EAAV;AACA,SAAKL,OAAL,GAAe,IAAI/C,OAAJ,CAAY,KAAKsB,EAAjB,CAAf;AACA,SAAK+B,UAAL,GAAkB,IAAIpD,GAAG,CAACM,IAAJ,CAAS+C,kBAAb,EAAlB;AACA,SAAKD,UAAL,CAAgBE,mBAAhB,CAAoC;AAClCC,MAAAA,MAAM,EAAE;AAD0B,KAApC;AAGA,SAAKC,YAAL,GAAoB,IAAIxD,GAAG,CAACM,IAAJ,CAASmD,oBAAb,EAApB;AACA,SAAKD,YAAL,CAAkBF,mBAAlB,CAAsC;AACpCC,MAAAA,MAAM,EAAE;AAD4B,KAAtC;AAGD;;AACDG,EAAAA,aAAa,GAAG;AACd,WAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAC5B,WAAKtD,IAAL,CAAUuD,kBAAV,CAA6BD,OAA7B;AACD,KAFM,CAAP;AAGD;;AACDE,EAAAA,kBAAkB,GAAG;AACnB,WAAO,KAAKxD,IAAL,CAAUC,WAAjB;AACD;;AACDwD,EAAAA,YAAY,GAAG;AACb,WAAO,KAAK1C,EAAL,CAAQe,GAAR,CAAY,aAAa,KAAKhC,MAAL,EAAzB,EAAwC4D,GAAxC,EAAP;AACD;;AAWDC,EAAAA,MAAM,GAAG;AACP,WAAO,KAAK3D,IAAL,CAAU4D,OAAV,EAAP;AACD,GAtCY,CAuCb;;;AACAC,EAAAA,oBAAoB,CAACC,CAAD,EAAIC,CAAJ,EAAO;AACzB,WAAOA,CAAC,GACN,KAAKhD,EAAL,CACCJ,UADD,CACYmD,CADZ,EAEC9C,KAFD,CAEO+C,CAAC,CAAC/C,KAAF,CAAQ,CAAR,CAFP,EAEmB+C,CAAC,CAAC/C,KAAF,CAAQ,CAAR,CAFnB,EAE+B+C,CAAC,CAAC/C,KAAF,CAAQ,CAAR,CAF/B,EAGCC,OAHD,CAGS8C,CAAC,CAAC7C,KAAF,GAAU6C,CAAC,CAAC7C,KAAF,CAAQ,CAAR,CAAV,GAAuB,WAHhC,EAG6C6C,CAAC,CAAC7C,KAAF,GAAU6C,CAAC,CAAC7C,KAAF,CAAQ,CAAR,CAAV,GAAuB,MAHpE,EAICC,KAJD,CAIO4C,CAAC,CAAC5C,KAAF,GAAU4C,CAAC,CAAC5C,KAAZ,GAAoB,IAJ3B,EAKCuC,GALD,CAKKK,CAAC,CAACL,GAAF,IAASK,CAAC,CAACL,GALhB,CADM,GAON,KAAK3C,EAAL,CAAQJ,UAAR,CAAmBmD,CAAnB,EAAsBJ,GAAtB,EAPF;AAQD;;AACDM,EAAAA,OAAO,CAACF,CAAD,EAAIC,CAAJ,EAAO;AACZ,WAAOA,CAAC,GACN,KAAKhD,EAAL,CACCJ,UADD,CACYmD,CADZ,EAEC7C,OAFD,CAES8C,CAAC,CAAC7C,KAAF,GAAU6C,CAAC,CAAC7C,KAAF,CAAQ,CAAR,CAAV,GAAuB,WAFhC,EAE6C6C,CAAC,CAAC7C,KAAF,GAAU6C,CAAC,CAAC7C,KAAF,CAAQ,CAAR,CAAV,GAAuB,MAFpE,EAGCC,KAHD,CAGO4C,CAAC,CAAC5C,KAAF,GAAU4C,CAAC,CAAC5C,KAAZ,GAAoB,IAH3B,EAICuC,GAJD,CAIKK,CAAC,CAACL,GAAF,IAASK,CAAC,CAACL,GAJhB,CADM,GAMN,KAAK3C,EAAL,CAAQJ,UAAR,CAAmBmD,CAAnB,EAAsBJ,GAAtB,EANF;AAOD;;AACDO,EAAAA,YAAY,CAACjC,EAAD,EAAK;AACf,WAAO,KAAKjB,EAAL,CACJJ,UADI,CACO,OADP,EAEJmB,GAFI,CAEAE,EAFA,EAGJ0B,GAHI,EAAP;AAID;;AACDQ,EAAAA,YAAY,CAAClC,EAAD,EAAKL,IAAL,EAAW;AACrB,WAAO,KAAKZ,EAAL,CACJJ,UADI,CACO,OADP,EAEJmB,GAFI,CAEAE,EAFA,EAGJmC,GAHI,CAGAxC,IAHA,CAAP;AAID,GAtEY,CAwEb;;;AAxEa;;AAuKf,eAAe,IAAI/B,QAAJ,EAAf","sourcesContent":["import {\n  FireSQL\n} from 'firesql';\nimport app from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firebase-firestore\";\n// import { toast } from \"react-toastify\";\nimport Config from \"../config\";\nclass Firebase {\n  constructor() {\n    app.initializeApp(Config._env.firebase);\n    this.auth = app.auth();\n    this.db = app.firestore();\n    this.fireSQL = new FireSQL(this.db);\n    this.authGoogle = new app.auth.GoogleAuthProvider();\n    this.authGoogle.setCustomParameters({\n      prompt: \"select_account\"\n    });\n    this.authFacebook = new app.auth.FacebookAuthProvider();\n    this.authFacebook.setCustomParameters({\n      prompt: \"select_account\"\n    });\n  }\n  isInitialized() {\n    return new Promise(resolve => {\n      this.auth.onAuthStateChanged(resolve);\n    });\n  }\n  getCurrentUsername() {\n    return this.auth.currentUser;\n  }\n  getUserLogIn() {\n    return this.db.doc(\"account/\" + this.getUid()).get();\n  }\n  getUid = user => {\n    !user && (user = this.auth.currentUser);\n    return user && (user.email || (user.providerData[0] && user.providerData[0].uid) || user.uid);\n  };\n  checkSession = user => {\n    !user && (user = this.auth.currentUser);\n    // console.log(\"user.metadata.b\", user && user.metadata.b);\n    return user && new Date().getTime() - user.metadata.b < 86400000; //1 hour\n  };\n\n  logout() {\n    return this.auth.signOut();\n  }\n  //------------------------------------------------------------------------//\n  getDataWithCondition(c, p) {\n    return p ?\n      this.db\n      .collection(c)\n      .where(p.where[0], p.where[1], p.where[2])\n      .orderBy(p.order ? p.order[0] : \"createdAt\", p.order ? p.order[1] : \"desc\")\n      .limit(p.limit ? p.limit : 1000)\n      .get(p.get && p.get) :\n      this.db.collection(c).get();\n  }\n  getData(c, p) {\n    return p ?\n      this.db\n      .collection(c)\n      .orderBy(p.order ? p.order[0] : \"createdAt\", p.order ? p.order[1] : \"desc\")\n      .limit(p.limit ? p.limit : 1000)\n      .get(p.get && p.get) :\n      this.db.collection(c).get();\n  }\n  getMovieItem(id) {\n    return this.db\n      .collection(\"movie\")\n      .doc(id)\n      .get();\n  }\n  setMovieItem(id, data) {\n    return this.db\n      .collection(\"movie\")\n      .doc(id)\n      .set(data);\n  }\n\n  // ----------\n  getDocWithCondition = (collection, params, key, callback) => {\n    try {\n      this.db.collection(collection)\n      .where(\"\")\n      .orderBy(params.order ? params.order[0] : \"createdAt\", params.order ? params.order[1] : \"desc\")\n      .limit(params.limit ? params.limit : 1000)\n      console.log(query);\n      api = eval(query);\n      api.onSnapshot(function (snapshot) {\n        const data = [];\n        snapshot.docs.forEach(doc => {\n          data.push({\n            ...doc.data(),\n            id: doc.id\n          });\n        });\n        console.log(\"data\", data);\n        callback && callback(data);\n      });\n      // return api.get();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  getDocWithMultiCondition = (collection, params, key, callback) => {\n    try {\n      var api;\n      var where = \"\";\n      params.where && params.where.map(function (item) {\n        console.log(item)\n        if (typeof item[1] == \"object\") {\n          where += \".where('\" + item[0] + \".\" + item[1].id + \"','==','\" + item[1].name + \"')\";\n        } else {\n          where += \".where('\" + item[0] + \"','==','\" + item[1] + \"')\";\n        }\n      })\n      let query = 'this.db.collection(collection)' +\n        where +\n        '.orderBy(params.order ? params.order[0] : \"createdAt\", params.order ? params.order[1] : \"desc\")' +\n        '.limit(params.limit ? params.limit : 1000)';\n      console.log(query);\n      api = eval(query);\n      api.onSnapshot(function (snapshot) {\n        const data = [];\n        snapshot.docs.forEach(doc => {\n          data.push({\n            ...doc.data(),\n            id: doc.id\n          });\n        });\n        console.log(\"data\", data);\n        callback && callback(data);\n      });\n      // return api.get();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  getDocWithMultiConditionSQL = (collection, params, key, callback) => {\n    try {\n      var where = \"\";\n      if (params.where) {\n        where = \" WHERE \";\n        params.where.map(function (item, idx) {\n          console.log(idx)\n          if (typeof item[1] == \"object\") {\n            let item\n            item[2].map(function (item, idx) {\n\n            })\n            where += (idx == 0 ? \"\" : \" AND \") + \"`\" + item[0] + \"` IN '\" + item[1].id + \"'\";\n          } else {\n            where += (idx == 0 ? \"\" : \" AND \") + \"`\" + item[0] + \"` = '\" + item[1] + \"'\";\n          }\n        })\n      }\n\n      let query = 'SELECT * FROM ' + collection +\n        where +\n        ' ORDER BY createdAt DESC' +\n        ' LIMIT 2';\n      console.log(\"QUERY\", query);\n      const api = this.fireSQL.query(query);\n      api.then(data => {\n        console.log(\"data\", data);\n        callback && callback(data);\n      });\n      // return api.get();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n}\n\nexport default new Firebase();"]},"metadata":{},"sourceType":"module"}