{"ast":null,"code":"import _defineProperty from \"/home/h/Source/Project/movie-website/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/h/Source/Project/movie-website/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/h/Source/Project/movie-website/src/context/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { createContext, useContext, useReducer } from \"react\";\nimport { initialState, mainReducer } from \"./reducers\";\nconst StateContext = createContext();\nexport const StateProvider = props => {\n  const _useReducer = useReducer(mainReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  const getMovieById = id => {\n    firebase.getMovieItem(id).then(rs => {\n      dispatch({\n        type: \"GET_MOVIE_ITEM\",\n        data: {\n          MovieItem: _objectSpread({}, rs.data(), {\n            id: rs.id\n          })\n        }\n      });\n    });\n  };\n\n  const getNewMovies = limit => {\n    var ListMovie = [];\n    firebase.getMovies([\"createdAt\", \"asc\"], limit).then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        ListMovie.push(_objectSpread({}, doc.data(), {\n          id: doc.id\n        }));\n      });\n      console.log(\"ListMovie\", ListMovie);\n      dispatch({\n        type: \"GET_MOVIES\",\n        data: {\n          NewMovies: ListMovie\n        }\n      });\n    });\n  };\n\n  const setMovieItem = (id, data) => {\n    firebase.setMovieItem(id, data);\n  };\n\n  const value = {\n    state,\n    dispatch,\n    firebase,\n    getMovieById,\n    getNewMovies,\n    setMovieItem\n  };\n  return React.createElement(StateContext.Provider, {\n    value: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, props.children);\n};\nexport const useReduceState = () => useContext(StateContext);\nexport const firebase = require(\"./firebase\").default;","map":{"version":3,"sources":["/home/h/Source/Project/movie-website/src/context/index.js"],"names":["React","createContext","useContext","useReducer","initialState","mainReducer","StateContext","StateProvider","props","state","dispatch","getMovieById","id","firebase","getMovieItem","then","rs","type","data","MovieItem","getNewMovies","limit","ListMovie","getMovies","querySnapshot","forEach","doc","push","console","log","NewMovies","setMovieItem","value","children","useReduceState","require","default"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,UAA3C,QAA6D,OAA7D;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,YAA1C;AACA,MAAMC,YAAY,GAAGL,aAAa,EAAlC;AACA,OAAO,MAAMM,aAAa,GAAGC,KAAK,IAAI;AAAA,sBACVL,UAAU,CAACE,WAAD,EAAcD,YAAd,CADA;AAAA;AAAA,QAC7BK,KAD6B;AAAA,QACtBC,QADsB;;AAGpC,QAAMC,YAAY,GAAIC,EAAD,IAAQ;AAC3BC,IAAAA,QAAQ,CAACC,YAAT,CAAsBF,EAAtB,EAA0BG,IAA1B,CAA+BC,EAAE,IAAI;AACnCN,MAAAA,QAAQ,CAAC;AAAEO,QAAAA,IAAI,EAAE,gBAAR;AAA0BC,QAAAA,IAAI,EAAE;AAACC,UAAAA,SAAS,oBAAKH,EAAE,CAACE,IAAH,EAAL;AAAeN,YAAAA,EAAE,EAACI,EAAE,CAACJ;AAArB;AAAV;AAAhC,OAAD,CAAR;AACD,KAFD;AAGD,GAJD;;AAKA,QAAMQ,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAIC,SAAS,GAAG,EAAhB;AACAT,IAAAA,QAAQ,CAACU,SAAT,CAAmB,CAAC,WAAD,EAAc,KAAd,CAAnB,EAAwCF,KAAxC,EAA+CN,IAA/C,CAAoD,UAAUS,aAAV,EAAyB;AAC3EA,MAAAA,aAAa,CAACC,OAAd,CAAsB,UAAUC,GAAV,EAAe;AACnCJ,QAAAA,SAAS,CAACK,IAAV,mBAAoBD,GAAG,CAACR,IAAJ,EAApB;AAAgCN,UAAAA,EAAE,EAAEc,GAAG,CAACd;AAAxC;AACD,OAFD;AAGAgB,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBP,SAAxB;AAEAZ,MAAAA,QAAQ,CAAC;AAAEO,QAAAA,IAAI,EAAE,YAAR;AAAsBC,QAAAA,IAAI,EAAE;AAAEY,UAAAA,SAAS,EAAER;AAAb;AAA5B,OAAD,CAAR;AACD,KAPD;AAQD,GAVD;;AAWA,QAAMS,YAAY,GAAG,CAACnB,EAAD,EAAIM,IAAJ,KAAa;AAChCL,IAAAA,QAAQ,CAACkB,YAAT,CAAsBnB,EAAtB,EAAyBM,IAAzB;AACD,GAFD;;AAGA,QAAMc,KAAK,GAAG;AACZvB,IAAAA,KADY;AAEZC,IAAAA,QAFY;AAGZG,IAAAA,QAHY;AAIZF,IAAAA,YAJY;AAKZS,IAAAA,YALY;AAMZW,IAAAA;AANY,GAAd;AASA,SAAO,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCxB,KAAK,CAACyB,QAA5C,CAAP;AACD,CAhCM;AAiCP,OAAO,MAAMC,cAAc,GAAG,MAAMhC,UAAU,CAACI,YAAD,CAAvC;AAEP,OAAO,MAAMO,QAAQ,GAAGsB,OAAO,CAAC,YAAD,CAAP,CAAsBC,OAAvC","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\nimport { initialState, mainReducer } from \"./reducers\";\nconst StateContext = createContext();\nexport const StateProvider = props => {\n  const [state, dispatch] = useReducer(mainReducer, initialState);\n\n  const getMovieById = (id) => {\n    firebase.getMovieItem(id).then(rs => {\n      dispatch({ type: \"GET_MOVIE_ITEM\", data: {MovieItem:{...rs.data(),id:rs.id} }});\n    });\n  };\n  const getNewMovies = (limit) => {\n    var ListMovie = [];\n    firebase.getMovies([\"createdAt\", \"asc\"],limit).then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        ListMovie.push({ ...doc.data(), id: doc.id })\n      });\n      console.log(\"ListMovie\",ListMovie);\n      \n      dispatch({ type: \"GET_MOVIES\", data: { NewMovies: ListMovie } });\n    });\n  };\n  const setMovieItem = (id,data) => {\n    firebase.setMovieItem(id,data);\n  };\n  const value = {\n    state,\n    dispatch,\n    firebase,\n    getMovieById,\n    getNewMovies,\n    setMovieItem\n  };\n\n  return <StateContext.Provider value={value}>{props.children}</StateContext.Provider>;\n};\nexport const useReduceState = () => useContext(StateContext);\n\nexport const firebase = require(\"./firebase\").default;\n"]},"metadata":{},"sourceType":"module"}