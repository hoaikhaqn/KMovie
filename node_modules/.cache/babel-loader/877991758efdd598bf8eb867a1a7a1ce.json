{"ast":null,"code":"import _slicedToArray from \"/home/h/Source/Project/movie-website/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/h/Source/Project/movie-website/src/context/index.js\";\nimport React, { createContext, useContext, useReducer } from \"react\";\nimport { initialState, mainReducer } from \"./reducers\";\nconst StateContext = createContext();\nexport const StateProvider = props => {\n  const _useReducer = useReducer(mainReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  const getMovieById = id => {// firebase.getMovies(id).then(rs => {\n    //   dispatch({ type: \"SET_MOVIE_ITEM\", movie: rs.data() });\n    // });\n  };\n\n  const getNewMovie = limit => {\n    console.log(firebase.getMovies([\"createdAt\", \"desc\"], limit)); // dispatch({ type: \"GET_MOVIES\", movie: firebase.getMovies([\"createdAt\",\"desc\"],limit) });\n  };\n\n  const value = {\n    state,\n    dispatch,\n    firebase,\n    getMovieById,\n    getNewMovie\n  };\n  return React.createElement(StateContext.Provider, {\n    value: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, props.children);\n};\nexport const useReduceState = () => useContext(StateContext);\nexport const firebase = require(\"./firebase\").default;","map":{"version":3,"sources":["/home/h/Source/Project/movie-website/src/context/index.js"],"names":["React","createContext","useContext","useReducer","initialState","mainReducer","StateContext","StateProvider","props","state","dispatch","getMovieById","id","getNewMovie","limit","console","log","firebase","getMovies","value","children","useReduceState","require","default"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,UAA3C,QAA6D,OAA7D;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,YAA1C;AACA,MAAMC,YAAY,GAAGL,aAAa,EAAlC;AACA,OAAO,MAAMM,aAAa,GAAGC,KAAK,IAAI;AAAA,sBACVL,UAAU,CAACE,WAAD,EAAcD,YAAd,CADA;AAAA;AAAA,QAC7BK,KAD6B;AAAA,QACtBC,QADsB;;AAGpC,QAAMC,YAAY,GAAGC,EAAE,IAAI,CACzB;AACA;AACA;AACD,GAJD;;AAKA,QAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACC,SAAT,CAAmB,CAAC,WAAD,EAAa,MAAb,CAAnB,EAAwCJ,KAAxC,CAAZ,EAD2B,CAG3B;AACD,GAJD;;AAKA,QAAMK,KAAK,GAAG;AACZV,IAAAA,KADY;AAEZC,IAAAA,QAFY;AAGZO,IAAAA,QAHY;AAIZN,IAAAA,YAJY;AAKZE,IAAAA;AALY,GAAd;AAQA,SAAO,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEM,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCX,KAAK,CAACY,QAA5C,CAAP;AACD,CAtBM;AAuBP,OAAO,MAAMC,cAAc,GAAG,MAAMnB,UAAU,CAACI,YAAD,CAAvC;AAEP,OAAO,MAAMW,QAAQ,GAAGK,OAAO,CAAC,YAAD,CAAP,CAAsBC,OAAvC","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\nimport { initialState, mainReducer } from \"./reducers\";\nconst StateContext = createContext();\nexport const StateProvider = props => {\n  const [state, dispatch] = useReducer(mainReducer, initialState);\n\n  const getMovieById = id => {\n    // firebase.getMovies(id).then(rs => {\n    //   dispatch({ type: \"SET_MOVIE_ITEM\", movie: rs.data() });\n    // });\n  };\n  const getNewMovie = limit => {\n    console.log(firebase.getMovies([\"createdAt\",\"desc\"],limit));\n    \n    // dispatch({ type: \"GET_MOVIES\", movie: firebase.getMovies([\"createdAt\",\"desc\"],limit) });\n  };\n  const value = {\n    state,\n    dispatch,\n    firebase,\n    getMovieById,\n    getNewMovie\n  };\n\n  return <StateContext.Provider value={value}>{props.children}</StateContext.Provider>;\n};\nexport const useReduceState = () => useContext(StateContext);\n\nexport const firebase = require(\"./firebase\").default;\n"]},"metadata":{},"sourceType":"module"}