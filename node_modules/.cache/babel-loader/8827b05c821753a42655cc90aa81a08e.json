{"ast":null,"code":"var _jsxFileName = \"/home/h/Source/Project/movie-website/src/views/MoviePlay/ServerList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport \"./style.css\"; // Components\n\nimport Episode from \"./Episode\";\nexport default function ServerList(props) {\n  useEffect(() => {});\n  return React.createElement(\"div\", {\n    className: \"zmovo-list-server\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, props.data.server.map(function (sv, svKey) {\n    return React.createElement(\"div\", {\n      className: \"zmovo-server\",\n      key: svKey,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"zmovo-server-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"icofont-server\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }), sv.name), React.createElement(\"ul\", {\n      className: \"zmovo-server-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, sv.ep.map(function (ep, epKey) {\n      return React.createElement(\"li\", {\n        className: \"episode \" + (epKey == cEp ? \"active\" : \"\"),\n        key: epKey,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/movie/\" + item.nameId + \"/play-movie-\" + (epKey + 1),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, ep.label));\n    })));\n  }));\n}","map":{"version":3,"sources":["/home/h/Source/Project/movie-website/src/views/MoviePlay/ServerList.js"],"names":["React","useEffect","useState","Link","Episode","ServerList","props","data","server","map","sv","svKey","name","ep","epKey","cEp","item","nameId","label"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,aAAP,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACtCL,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,CAAT;AAGA,SACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKK,KAAK,CAACC,IAAN,CAAWC,MAAX,CAAkBC,GAAlB,CAAsB,UAAUC,EAAV,EAAcC,KAAd,EAAqB;AACxC,WACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,GAAG,EAAEA,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkC;AAAG,MAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlC,EAAqED,EAAE,CAACE,IAAxE,CADJ,EAEI;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,EAAE,CAACG,EAAH,CAAMJ,GAAN,CAAU,UAAUI,EAAV,EAAcC,KAAd,EAAqB;AAC5B,aACI;AAAI,QAAA,SAAS,EAAE,cAAcA,KAAK,IAAIC,GAAT,GAAe,QAAf,GAA0B,EAAxC,CAAf;AAA4D,QAAA,GAAG,EAAED,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAE,YAAYE,IAAI,CAACC,MAAjB,GAA0B,cAA1B,IAA4CH,KAAK,GAAG,CAApD,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmED,EAAE,CAACK,KAAtE,CADJ,CADJ;AAKH,KANA,CADL,CAFJ,CADJ;AAcH,GAfA,CADL,CADJ;AAqBH","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport \"./style.css\";\n\n// Components\nimport Episode from \"./Episode\";\n\nexport default function ServerList(props) {\n    useEffect(() => {\n\n    })\n    return (\n        <div className=\"zmovo-list-server\">\n            {props.data.server.map(function (sv, svKey) {\n                return (\n                    <div className=\"zmovo-server\" key={svKey}>\n                        <h4 className=\"zmovo-server-name\"><i className=\"icofont-server\"></i>{sv.name}</h4>\n                        <ul className=\"zmovo-server-list\">\n                            {sv.ep.map(function (ep, epKey) {\n                                return (\n                                    <li className={\"episode \" + (epKey == cEp ? \"active\" : \"\")} key={epKey}>\n                                        <Link to={\"/movie/\" + item.nameId + \"/play-movie-\" + (epKey + 1)}>{ep.label}</Link>\n                                    </li>\n                                )\n                            })}\n                        </ul>\n                    </div>\n                )\n            })}\n        </div>\n    );\n\n}\n\n"]},"metadata":{},"sourceType":"module"}