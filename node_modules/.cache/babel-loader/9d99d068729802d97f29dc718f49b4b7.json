{"ast":null,"code":"var _jsxFileName = \"/home/h/Source/Project/movie-website/src/views/MoviePlay/Episode.js\";\nimport React, { useEffect } from \"react\";\nimport \"./style.css\";\nexport default function Episode(props) {\n  useEffect(() => {});\n\n  function onChangeEp(dataEp) {\n    var xhr = new XMLHttpRequest();\n    xhr.responseType = 'blob';\n\n    xhr.onload = function () {\n      var reader = new FileReader();\n\n      reader.onloadend = function () {\n        var byteCharacters = atob(reader.result.slice(reader.result.indexOf(',') + 1));\n        var byteNumbers = new Array(byteCharacters.length);\n\n        for (var i = 0; i < byteCharacters.length; i++) {\n          byteNumbers[i] = byteCharacters.charCodeAt(i);\n        }\n\n        var byteArray = new Uint8Array(byteNumbers);\n        var blob = new Blob([byteArray], {\n          type: 'video/ogg'\n        });\n        var url = URL.createObjectURL(blob);\n        props.setCurentEp({\n          sv: dataEp.sv,\n          ep: dataEp.ep,\n          blob: url\n        });\n      };\n\n      reader.readAsDataURL(xhr.response);\n    };\n\n    xhr.open('GET', movieItem.server[1].ep[0].link);\n    xhr.send();\n  }\n\n  return React.createElement(\"li\", {\n    onClick: () => {\n      onChangeEp(props.dataEp);\n    },\n    className: \"episode \" + (props.active ? \"active\" : \"\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, props.data.label));\n}","map":{"version":3,"sources":["/home/h/Source/Project/movie-website/src/views/MoviePlay/Episode.js"],"names":["React","useEffect","Episode","props","onChangeEp","dataEp","xhr","XMLHttpRequest","responseType","onload","reader","FileReader","onloadend","byteCharacters","atob","result","slice","indexOf","byteNumbers","Array","length","i","charCodeAt","byteArray","Uint8Array","blob","Blob","type","url","URL","createObjectURL","setCurentEp","sv","ep","readAsDataURL","response","open","movieItem","server","link","send","active","data","label"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACnCF,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,CAAT;;AAGA,WAASG,UAAT,CAAoBC,MAApB,EAA2B;AACvB,QAAIC,GAAG,GAAG,IAAIC,cAAJ,EAAV;AACAD,IAAAA,GAAG,CAACE,YAAJ,GAAmB,MAAnB;;AACAF,IAAAA,GAAG,CAACG,MAAJ,GAAa,YAAY;AACrB,UAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AACAD,MAAAA,MAAM,CAACE,SAAP,GAAmB,YAAY;AAC3B,YAAIC,cAAc,GAAGC,IAAI,CAACJ,MAAM,CAACK,MAAP,CAAcC,KAAd,CAAoBN,MAAM,CAACK,MAAP,CAAcE,OAAd,CAAsB,GAAtB,IAA6B,CAAjD,CAAD,CAAzB;AACA,YAAIC,WAAW,GAAG,IAAIC,KAAJ,CAAUN,cAAc,CAACO,MAAzB,CAAlB;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,cAAc,CAACO,MAAnC,EAA2CC,CAAC,EAA5C,EAAgD;AAC5CH,UAAAA,WAAW,CAACG,CAAD,CAAX,GAAiBR,cAAc,CAACS,UAAf,CAA0BD,CAA1B,CAAjB;AACH;;AACD,YAAIE,SAAS,GAAG,IAAIC,UAAJ,CAAeN,WAAf,CAAhB;AACA,YAAIO,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACH,SAAD,CAAT,EAAsB;AAAEI,UAAAA,IAAI,EAAE;AAAR,SAAtB,CAAX;AACA,YAAIC,GAAG,GAAGC,GAAG,CAACC,eAAJ,CAAoBL,IAApB,CAAV;AACAtB,QAAAA,KAAK,CAAC4B,WAAN,CAAkB;AAACC,UAAAA,EAAE,EAAC3B,MAAM,CAAC2B,EAAX;AAAcC,UAAAA,EAAE,EAAC5B,MAAM,CAAC4B,EAAxB;AAA2BR,UAAAA,IAAI,EAACG;AAAhC,SAAlB;AACH,OAVD;;AAWAlB,MAAAA,MAAM,CAACwB,aAAP,CAAqB5B,GAAG,CAAC6B,QAAzB;AACH,KAdD;;AAeA7B,IAAAA,GAAG,CAAC8B,IAAJ,CAAS,KAAT,EAAeC,SAAS,CAACC,MAAV,CAAiB,CAAjB,EAAoBL,EAApB,CAAuB,CAAvB,EAA0BM,IAAzC;AACAjC,IAAAA,GAAG,CAACkC,IAAJ;AACH;;AACD,SACI;AAAI,IAAA,OAAO,EAAE,MAAI;AAACpC,MAAAA,UAAU,CAACD,KAAK,CAACE,MAAP,CAAV;AAAyB,KAA3C;AAA6C,IAAA,SAAS,EAAE,cAAcF,KAAK,CAACsC,MAAN,GAAe,QAAf,GAAwB,EAAtC,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOtC,KAAK,CAACuC,IAAN,CAAWC,KAAlB,CADJ,CADJ;AAMH","sourcesContent":["import React, { useEffect } from \"react\";\nimport \"./style.css\";\n\nexport default function Episode(props) {\n    useEffect(() => {\n        \n    })\n    function onChangeEp(dataEp){\n        var xhr = new XMLHttpRequest();\n        xhr.responseType = 'blob';\n        xhr.onload = function () {\n            var reader = new FileReader();\n            reader.onloadend = function () {\n                var byteCharacters = atob(reader.result.slice(reader.result.indexOf(',') + 1));\n                var byteNumbers = new Array(byteCharacters.length);\n                for (var i = 0; i < byteCharacters.length; i++) {\n                    byteNumbers[i] = byteCharacters.charCodeAt(i);\n                }\n                var byteArray = new Uint8Array(byteNumbers);\n                var blob = new Blob([byteArray], { type: 'video/ogg' });\n                var url = URL.createObjectURL(blob);\n                props.setCurentEp({sv:dataEp.sv,ep:dataEp.ep,blob:url});\n            }\n            reader.readAsDataURL(xhr.response);\n        };\n        xhr.open('GET',movieItem.server[1].ep[0].link);\n        xhr.send();\n    }\n    return (\n        <li onClick={()=>{onChangeEp(props.dataEp)}} className={\"episode \" + (props.active ? \"active\":\"\")}>\n            <span>{props.data.label}</span>\n        </li>\n    );\n\n}\n\n"]},"metadata":{},"sourceType":"module"}