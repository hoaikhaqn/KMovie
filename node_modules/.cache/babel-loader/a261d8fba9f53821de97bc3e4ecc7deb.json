{"ast":null,"code":"import _defineProperty from \"/home/h/Source/Project/movie-website/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/*eslint-disable no-eval */\nimport { FireSQL } from 'firesql';\nimport app from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firebase-firestore\"; // import { toast } from \"react-toastify\";\n\nimport Config from \"../config\";\n\nclass Firebase {\n  constructor() {\n    this.getUid = user => {\n      !user && (user = this.auth.currentUser);\n      return user && (user.email || user.providerData[0] && user.providerData[0].uid || user.uid);\n    };\n\n    this.checkSession = user => {\n      !user && (user = this.auth.currentUser); // console.log(\"user.metadata.b\", user && user.metadata.b);\n\n      return user && new Date().getTime() - user.metadata.b < 86400000; //1 hour\n    };\n\n    this.getDocWithCondition = (collection, params, callback) => {\n      try {\n        const api = this.db.collection(collection).where(params.where[0] + (typeof params.where[1] === \"object\" ? \".\" + params.where[1].id : \"\"), \"==\", typeof params.where[1] === \"object\" ? params.where[1].name : params.where[1]);\n        api.onSnapshot(function (snapshot) {\n          const data = [];\n          snapshot.docs.forEach(doc => {\n            data.push(_objectSpread({}, doc.data(), {\n              id: doc.id\n            }));\n          }); // console.log(\"data\", data);\n\n          callback && callback(data);\n        }); // return api.get();\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    this.getDocWithMultiCondition = (collection, params, callback) => {\n      try {\n        var api;\n        var where = \"\";\n        params.where && params.where.array.forEach(item => {\n          if (typeof item[1] === \"object\") {\n            where += \".where('\" + item[0] + \".\" + item[1].id + \"','==','\" + item[1].name + \"')\";\n          } else {\n            where += \".where('\" + item[0] + \"','==','\" + item[1] + \"')\";\n          }\n        });\n        let query = \"this.db.collection(collection)\".concat(where); // console.log(query);\n\n        api = eval(query);\n        api.onSnapshot(function (snapshot) {\n          const data = [];\n          snapshot.docs.forEach(doc => {\n            data.push(_objectSpread({}, doc.data(), {\n              id: doc.id\n            }));\n          });\n\n          if (params.orderBy) {\n            data.sort(function (a, b) {\n              return (params.orderBy[1] === \"asc\" ? 1 : -1) * (a[params.orderBy[0]] - b[params.orderBy[0]]);\n            });\n          } else {\n            data.sort(function (a, b) {\n              return b.createdAt - a.createdAt;\n            });\n          } // console.log(\"data\", data);\n\n\n          callback && callback(data);\n        }); // return api.get();\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    this.getDocWithKeyword = (collection, params, callback) => {\n      try {\n        let query = \"SELECT * FROM \".concat(collection, \" WHERE \").concat(params.where[0], \" OR \").concat(params.where[1]);\n        console.log(\"QUERY\", query);\n        const api = this.fireSQL.query(query);\n        api.then(data => {\n          if (params.orderBy) {\n            data.sort(function (a, b) {\n              return (params.orderBy[1] === \"asc\" ? 1 : -1) * (a[params.orderBy[0]] - b[params.orderBy[0]]);\n            });\n          } else {\n            data.sort(function (a, b) {\n              return b.createdAt - a.createdAt;\n            });\n          }\n\n          console.log(\"data\", data);\n          callback && callback(data);\n        }); // return api.get();\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    app.initializeApp(Config._env.firebase);\n    this.auth = app.auth();\n    this.db = app.firestore();\n    this.fireSQL = new FireSQL(this.db);\n    this.authGoogle = new app.auth.GoogleAuthProvider();\n    this.authGoogle.setCustomParameters({\n      prompt: \"select_account\"\n    });\n    this.authFacebook = new app.auth.FacebookAuthProvider();\n    this.authFacebook.setCustomParameters({\n      prompt: \"select_account\"\n    });\n  }\n\n  isInitialized() {\n    return new Promise(resolve => {\n      this.auth.onAuthStateChanged(resolve);\n    });\n  }\n\n  getCurrentUsername() {\n    return this.auth.currentUser;\n  }\n\n  getUserLogIn() {\n    return this.db.doc(\"account/\" + this.getUid()).get();\n  }\n\n  logout() {\n    return this.auth.signOut();\n  } //------------------------------------------------------------------------//\n\n\n  getDataWithCondition(c, p) {\n    return p ? this.db.collection(c).where(p.where[0], p.where[1], p.where[2]).orderBy(p.order ? p.order[0] : \"createdAt\", p.order ? p.order[1] : \"desc\").limit(p.limit ? p.limit : 1000).get(p.get && p.get) : this.db.collection(c).get();\n  }\n\n  getData(c, p) {\n    return p ? this.db.collection(c).orderBy(p.order ? p.order[0] : \"createdAt\", p.order ? p.order[1] : \"desc\").limit(p.limit ? p.limit : 1000).get(p.get && p.get) : this.db.collection(c).get();\n  }\n\n  getMovieItem(id) {\n    return this.db.collection(\"movie\").doc(id).get();\n  }\n\n  setMovieItem(id, data) {\n    return this.db.collection(\"movie\").doc(id).set(data);\n  } // ----------\n\n\n}\n\nexport default new Firebase();","map":{"version":3,"sources":["/home/h/Source/Project/movie-website/src/context/firebase.js"],"names":["FireSQL","app","Config","Firebase","constructor","getUid","user","auth","currentUser","email","providerData","uid","checkSession","Date","getTime","metadata","b","getDocWithCondition","collection","params","callback","api","db","where","id","name","onSnapshot","snapshot","data","docs","forEach","doc","push","error","console","getDocWithMultiCondition","array","item","query","eval","orderBy","sort","a","createdAt","getDocWithKeyword","log","fireSQL","then","initializeApp","_env","firebase","firestore","authGoogle","GoogleAuthProvider","setCustomParameters","prompt","authFacebook","FacebookAuthProvider","isInitialized","Promise","resolve","onAuthStateChanged","getCurrentUsername","getUserLogIn","get","logout","signOut","getDataWithCondition","c","p","order","limit","getData","getMovieItem","setMovieItem","set"],"mappings":"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","sourcesContent":["/*eslint-disable no-eval */\nimport {\n  FireSQL\n} from 'firesql';\nimport app from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firebase-firestore\";\n// import { toast } from \"react-toastify\";\nimport Config from \"../config\";\nclass Firebase {\n  constructor() {\n    app.initializeApp(Config._env.firebase);\n    this.auth = app.auth();\n    this.db = app.firestore();\n    this.fireSQL = new FireSQL(this.db);\n    this.authGoogle = new app.auth.GoogleAuthProvider();\n    this.authGoogle.setCustomParameters({\n      prompt: \"select_account\"\n    });\n    this.authFacebook = new app.auth.FacebookAuthProvider();\n    this.authFacebook.setCustomParameters({\n      prompt: \"select_account\"\n    });\n  }\n  isInitialized() {\n    return new Promise(resolve => {\n      this.auth.onAuthStateChanged(resolve);\n    });\n  }\n  getCurrentUsername() {\n    return this.auth.currentUser;\n  }\n  getUserLogIn() {\n    return this.db.doc(\"account/\" + this.getUid()).get();\n  }\n  getUid = user => {\n    !user && (user = this.auth.currentUser);\n    return user && (user.email || (user.providerData[0] && user.providerData[0].uid) || user.uid);\n  };\n  checkSession = user => {\n    !user && (user = this.auth.currentUser);\n    // console.log(\"user.metadata.b\", user && user.metadata.b);\n    return user && new Date().getTime() - user.metadata.b < 86400000; //1 hour\n  };\n\n  logout() {\n    return this.auth.signOut();\n  }\n  //------------------------------------------------------------------------//\n  getDataWithCondition(c, p) {\n    return p ?\n      this.db\n      .collection(c)\n      .where(p.where[0], p.where[1], p.where[2])\n      .orderBy(p.order ? p.order[0] : \"createdAt\", p.order ? p.order[1] : \"desc\")\n      .limit(p.limit ? p.limit : 1000)\n      .get(p.get && p.get) :\n      this.db.collection(c).get();\n  }\n  getData(c, p) {\n    return p ?\n      this.db\n      .collection(c)\n      .orderBy(p.order ? p.order[0] : \"createdAt\", p.order ? p.order[1] : \"desc\")\n      .limit(p.limit ? p.limit : 1000)\n      .get(p.get && p.get) :\n      this.db.collection(c).get();\n  }\n  getMovieItem(id) {\n    return this.db\n      .collection(\"movie\")\n      .doc(id)\n      .get();\n  }\n  setMovieItem(id, data) {\n    return this.db\n      .collection(\"movie\")\n      .doc(id)\n      .set(data);\n  }\n\n  // ----------\n  getDocWithCondition = (collection, params, callback) => {\n    try {\n      const api = this.db.collection(collection)\n      .where(params.where[0]+(\n      typeof params.where[1] === \"object\" ? \".\" + params.where[1].id : \"\"),\"==\",\n      typeof params.where[1] === \"object\" ? params.where[1].name : params.where[1]);\n\n      api.onSnapshot(function (snapshot) {\n        const data = [];\n        snapshot.docs.forEach(doc => {\n          data.push({\n            ...doc.data(),\n            id: doc.id\n          });\n        });\n        // console.log(\"data\", data);\n        callback && callback(data);\n      });\n      // return api.get();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  getDocWithMultiCondition = (collection, params, callback) => {\n    try {\n      var api;\n      var where = \"\";\n      params.where && params.where.array.forEach(item => {\n        if (typeof item[1] === \"object\") {\n          where += \".where('\" + item[0] + \".\" + item[1].id + \"','==','\" + item[1].name + \"')\";\n        } else {\n          where += \".where('\" + item[0] + \"','==','\" + item[1] + \"')\";\n        }\n      })\n      let query = `this.db.collection(collection)${where}`;\n      // console.log(query);\n      api = eval(query);\n      api.onSnapshot(function (snapshot) {\n        const data = [];\n        snapshot.docs.forEach(doc => {\n          data.push({\n            ...doc.data(),\n            id: doc.id\n          });\n        });\n        if(params.orderBy){\n          data.sort(function(a, b){\n            return (params.orderBy[1] === \"asc\"?1:-1)*(a[params.orderBy[0]] - b[params.orderBy[0]])\n          })\n        }else{\n          data.sort(function(a, b){\n            return b.createdAt - a.createdAt;\n          })\n        }\n        // console.log(\"data\", data);\n        callback && callback(data);\n      });\n      // return api.get();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  // getDocWithMultiConditionSQL = (collection, params,callback) => {\n  //   try {\n  //     var where = \"\";\n  //     if (params.where) {\n  //       where = \" WHERE \";\n  //       params.where.map(function (item, idx) {\n  //         if (typeof item[1] === \"object\") {\n  //           where += (idx === 0 ? \"\" : \" AND \") + \"`\" + item[0] + \"` IN '\" + item[1].id + \"'\";\n  //         } else {\n  //           where += (idx === 0 ? \"\" : \" AND \") + \"`\" + item[0] + \"` = '\" + item[1] + \"'\";\n  //         }\n  //       })\n  //     }\n\n  //     let query = 'SELECT * FROM ' + collection +\n  //       where +\n  //       ' ORDER BY createdAt DESC' +\n  //       ' LIMIT 2';\n  //     console.log(\"QUERY\", query);\n  //     const api = this.fireSQL.query(query);\n  //     api.then(data => {\n  //       console.log(\"data\", data);\n  //       callback && callback(data);\n  //     });\n  //     // return api.get();\n  //   } catch (error) {\n  //     console.error(error);\n  //   }\n  // };\n  getDocWithKeyword = (collection, params, callback) => {\n    try {\n      let query = `SELECT * FROM ${collection} WHERE ${params.where[0]} OR ${params.where[1]}`;\n      console.log(\"QUERY\", query);\n      const api = this.fireSQL.query(query);\n      api.then(data => {\n        if(params.orderBy){\n          data.sort(function(a, b){\n            return (params.orderBy[1] === \"asc\"?1:-1)*(a[params.orderBy[0]] - b[params.orderBy[0]])\n          })\n        }else{\n          data.sort(function(a, b){\n            return b.createdAt - a.createdAt;\n          })\n        }\n        console.log(\"data\", data);\n        callback && callback(data);\n      });\n      // return api.get();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n}\n\nexport default new Firebase();"]},"metadata":{},"sourceType":"module"}