{"ast":null,"code":"import _slicedToArray from \"/home/h/Source/Project/movie-website/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/h/Source/Project/movie-website/src/context/index.js\";\nimport React, { createContext, useContext, useReducer } from \"react\";\nimport { initialState, mainReducer } from \"./reducers\";\nconst StateContext = createContext();\nexport const StateProvider = props => {\n  const _useReducer = useReducer(mainReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  const getMovieById = id => {\n    firebase.getMoveItem(id).then(rs => {\n      dispatch({\n        type: \"SET_MOVIE_ITEM\",\n        movie: {\n          id: rs.id,\n          data: rs.data()\n        }\n      });\n    });\n  };\n\n  const value = {\n    state,\n    dispatch,\n    firebase,\n    getMovieById\n  };\n  return React.createElement(StateContext.Provider, {\n    value: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, props.children);\n};\nexport const useReduceState = () => useContext(StateContext);\nexport const firebase = require(\"./firebase\").default;","map":{"version":3,"sources":["/home/h/Source/Project/movie-website/src/context/index.js"],"names":["React","createContext","useContext","useReducer","initialState","mainReducer","StateContext","StateProvider","props","state","dispatch","getMovieById","id","firebase","getMoveItem","then","rs","type","movie","data","value","children","useReduceState","require","default"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,UAA3C,QAA6D,OAA7D;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,YAA1C;AACA,MAAMC,YAAY,GAAGL,aAAa,EAAlC;AACA,OAAO,MAAMM,aAAa,GAAGC,KAAK,IAAI;AAAA,sBACVL,UAAU,CAACE,WAAD,EAAcD,YAAd,CADA;AAAA;AAAA,QAC7BK,KAD6B;AAAA,QACtBC,QADsB;;AAGpC,QAAMC,YAAY,GAAIC,EAAD,IAAQ;AAC3BC,IAAAA,QAAQ,CAACC,WAAT,CAAqBF,EAArB,EAAyBG,IAAzB,CAA8BC,EAAE,IAAI;AAClCN,MAAAA,QAAQ,CAAC;AAAEO,QAAAA,IAAI,EAAE,gBAAR;AAA0BC,QAAAA,KAAK,EAAE;AAACN,UAAAA,EAAE,EAACI,EAAE,CAACJ,EAAP;AAAUO,UAAAA,IAAI,EAACH,EAAE,CAACG,IAAH;AAAf;AAAjC,OAAD,CAAR;AACD,KAFD;AAGD,GAJD;;AAKA,QAAMC,KAAK,GAAG;AACZX,IAAAA,KADY;AAEZC,IAAAA,QAFY;AAGZG,IAAAA,QAHY;AAIZF,IAAAA;AAJY,GAAd;AAOA,SAAO,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAES,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCZ,KAAK,CAACa,QAA5C,CAAP;AACD,CAhBM;AAiBP,OAAO,MAAMC,cAAc,GAAG,MAAMpB,UAAU,CAACI,YAAD,CAAvC;AAEP,OAAO,MAAMO,QAAQ,GAAGU,OAAO,CAAC,YAAD,CAAP,CAAsBC,OAAvC","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\nimport { initialState, mainReducer } from \"./reducers\";\nconst StateContext = createContext();\nexport const StateProvider = props => {\n  const [state, dispatch] = useReducer(mainReducer, initialState);\n\n  const getMovieById = (id) => {\n    firebase.getMoveItem(id).then(rs => {\n      dispatch({ type: \"SET_MOVIE_ITEM\", movie: {id:rs.id,data:rs.data()} });\n    });\n  };\n  const value = {\n    state,\n    dispatch,\n    firebase,\n    getMovieById\n  };\n\n  return <StateContext.Provider value={value}>{props.children}</StateContext.Provider>;\n};\nexport const useReduceState = () => useContext(StateContext);\n\nexport const firebase = require(\"./firebase\").default;\n"]},"metadata":{},"sourceType":"module"}