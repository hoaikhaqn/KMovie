{"ast":null,"code":"import _defineProperty from \"/home/h/Source/Project/movie-website/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FireSQL } from 'firesql';\nimport app from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firebase-firestore\"; // import { toast } from \"react-toastify\";\n\nimport Config from \"../config\";\n\nclass Firebase {\n  constructor() {\n    this.getUid = user => {\n      !user && (user = this.auth.currentUser);\n      return user && (user.email || user.providerData[0] && user.providerData[0].uid || user.uid);\n    };\n\n    this.checkSession = user => {\n      !user && (user = this.auth.currentUser); // console.log(\"user.metadata.b\", user && user.metadata.b);\n\n      return user && new Date().getTime() - user.metadata.b < 86400000; //1 hour\n    };\n\n    this.getDocWithCondition = (collection, params, key, callback) => {\n      try {\n        var api;\n        var where = \"\";\n\n        if (typeof params.where[1] === \"object\") {\n          where += \".where('\" + params.where[0] + \".\" + params.where[1].id + \"','==','\" + params.where[1].name + \"')\";\n        } else {\n          where += \".where('\" + params.where[0] + \"','==','\" + params.where[1] + \"')\";\n        }\n\n        let query = 'this.db.collection(collection)' + where; // console.log(query);\n\n        api = eval(query);\n        api.onSnapshot(function (snapshot) {\n          const data = [];\n          snapshot.docs.forEach(doc => {\n            data.push(_objectSpread({}, doc.data(), {\n              id: doc.id\n            }));\n          }); // console.log(\"data\", data);\n\n          callback && callback(data);\n        }); // return api.get();\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    this.getDocWithMultiCondition = (collection, params, key, callback) => {\n      try {\n        var api;\n        var where = \"\";\n        params.where && params.where.map(function (item) {\n          // console.log(item)\n          if (typeof item[1] === \"object\") {\n            where += \".where('\" + item[0] + \".\" + item[1].id + \"','==','\" + item[1].name + \"')\";\n          } else {\n            where += \".where('\" + item[0] + \"','==','\" + item[1] + \"')\";\n          }\n        });\n        let query = 'this.db.collection(collection)' + where; // console.log(query);\n\n        api = eval(query);\n        api.onSnapshot(function (snapshot) {\n          const data = [];\n          snapshot.docs.forEach(doc => {\n            data.push(_objectSpread({}, doc.data(), {\n              id: doc.id\n            }));\n          }); // console.log(\"data\", data);\n\n          callback && callback(data);\n        }); // return api.get();\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    this.getDocWithMultiConditionSQL = (collection, params, key, callback) => {\n      try {\n        var where = \"\";\n\n        if (params.where) {\n          where = \" WHERE \";\n          params.where.map(function (item, idx) {\n            // console.log(idx)\n            if (typeof item[1] == \"object\") {\n              let item;\n              item[2].map(function (item, idx) {});\n              where += (idx == 0 ? \"\" : \" AND \") + \"`\" + item[0] + \"` IN '\" + item[1].id + \"'\";\n            } else {\n              where += (idx == 0 ? \"\" : \" AND \") + \"`\" + item[0] + \"` = '\" + item[1] + \"'\";\n            }\n          });\n        }\n\n        let query = 'SELECT * FROM ' + collection + where + ' ORDER BY createdAt DESC' + ' LIMIT 2';\n        console.log(\"QUERY\", query);\n        const api = this.fireSQL.query(query);\n        api.then(data => {\n          console.log(\"data\", data);\n          callback && callback(data);\n        }); // return api.get();\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    app.initializeApp(Config._env.firebase);\n    this.auth = app.auth();\n    this.db = app.firestore();\n    this.fireSQL = new FireSQL(this.db);\n    this.authGoogle = new app.auth.GoogleAuthProvider();\n    this.authGoogle.setCustomParameters({\n      prompt: \"select_account\"\n    });\n    this.authFacebook = new app.auth.FacebookAuthProvider();\n    this.authFacebook.setCustomParameters({\n      prompt: \"select_account\"\n    });\n  }\n\n  isInitialized() {\n    return new Promise(resolve => {\n      this.auth.onAuthStateChanged(resolve);\n    });\n  }\n\n  getCurrentUsername() {\n    return this.auth.currentUser;\n  }\n\n  getUserLogIn() {\n    return this.db.doc(\"account/\" + this.getUid()).get();\n  }\n\n  logout() {\n    return this.auth.signOut();\n  } //------------------------------------------------------------------------//\n\n\n  getDataWithCondition(c, p) {\n    return p ? this.db.collection(c).where(p.where[0], p.where[1], p.where[2]).orderBy(p.order ? p.order[0] : \"createdAt\", p.order ? p.order[1] : \"desc\").limit(p.limit ? p.limit : 1000).get(p.get && p.get) : this.db.collection(c).get();\n  }\n\n  getData(c, p) {\n    return p ? this.db.collection(c).orderBy(p.order ? p.order[0] : \"createdAt\", p.order ? p.order[1] : \"desc\").limit(p.limit ? p.limit : 1000).get(p.get && p.get) : this.db.collection(c).get();\n  }\n\n  getMovieItem(id) {\n    return this.db.collection(\"movie\").doc(id).get();\n  }\n\n  setMovieItem(id, data) {\n    return this.db.collection(\"movie\").doc(id).set(data);\n  } // ----------\n\n\n}\n\nexport default new Firebase();","map":{"version":3,"sources":["/home/h/Source/Project/movie-website/src/context/firebase.js"],"names":["FireSQL","app","Config","Firebase","constructor","getUid","user","auth","currentUser","email","providerData","uid","checkSession","Date","getTime","metadata","b","getDocWithCondition","collection","params","key","callback","api","where","id","name","query","eval","onSnapshot","snapshot","data","docs","forEach","doc","push","error","console","getDocWithMultiCondition","map","item","getDocWithMultiConditionSQL","idx","log","fireSQL","then","initializeApp","_env","firebase","db","firestore","authGoogle","GoogleAuthProvider","setCustomParameters","prompt","authFacebook","FacebookAuthProvider","isInitialized","Promise","resolve","onAuthStateChanged","getCurrentUsername","getUserLogIn","get","logout","signOut","getDataWithCondition","c","p","orderBy","order","limit","getData","getMovieItem","setMovieItem","set"],"mappings":"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","sourcesContent":["import {\n  FireSQL\n} from 'firesql';\nimport app from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firebase-firestore\";\n// import { toast } from \"react-toastify\";\nimport Config from \"../config\";\nclass Firebase {\n  constructor() {\n    app.initializeApp(Config._env.firebase);\n    this.auth = app.auth();\n    this.db = app.firestore();\n    this.fireSQL = new FireSQL(this.db);\n    this.authGoogle = new app.auth.GoogleAuthProvider();\n    this.authGoogle.setCustomParameters({\n      prompt: \"select_account\"\n    });\n    this.authFacebook = new app.auth.FacebookAuthProvider();\n    this.authFacebook.setCustomParameters({\n      prompt: \"select_account\"\n    });\n  }\n  isInitialized() {\n    return new Promise(resolve => {\n      this.auth.onAuthStateChanged(resolve);\n    });\n  }\n  getCurrentUsername() {\n    return this.auth.currentUser;\n  }\n  getUserLogIn() {\n    return this.db.doc(\"account/\" + this.getUid()).get();\n  }\n  getUid = user => {\n    !user && (user = this.auth.currentUser);\n    return user && (user.email || (user.providerData[0] && user.providerData[0].uid) || user.uid);\n  };\n  checkSession = user => {\n    !user && (user = this.auth.currentUser);\n    // console.log(\"user.metadata.b\", user && user.metadata.b);\n    return user && new Date().getTime() - user.metadata.b < 86400000; //1 hour\n  };\n\n  logout() {\n    return this.auth.signOut();\n  }\n  //------------------------------------------------------------------------//\n  getDataWithCondition(c, p) {\n    return p ?\n      this.db\n      .collection(c)\n      .where(p.where[0], p.where[1], p.where[2])\n      .orderBy(p.order ? p.order[0] : \"createdAt\", p.order ? p.order[1] : \"desc\")\n      .limit(p.limit ? p.limit : 1000)\n      .get(p.get && p.get) :\n      this.db.collection(c).get();\n  }\n  getData(c, p) {\n    return p ?\n      this.db\n      .collection(c)\n      .orderBy(p.order ? p.order[0] : \"createdAt\", p.order ? p.order[1] : \"desc\")\n      .limit(p.limit ? p.limit : 1000)\n      .get(p.get && p.get) :\n      this.db.collection(c).get();\n  }\n  getMovieItem(id) {\n    return this.db\n      .collection(\"movie\")\n      .doc(id)\n      .get();\n  }\n  setMovieItem(id, data) {\n    return this.db\n      .collection(\"movie\")\n      .doc(id)\n      .set(data);\n  }\n\n  // ----------\n  getDocWithCondition = (collection, params, key, callback) => {\n    try {\n      var api;\n      var where = \"\";\n      if (typeof params.where[1] === \"object\") {\n        where += \".where('\" + params.where[0] + \".\" + params.where[1].id + \"','==','\" + params.where[1].name + \"')\";\n      } else {\n        where += \".where('\" + params.where[0] + \"','==','\" + params.where[1] + \"')\";\n      }\n      let query = 'this.db.collection(collection)' + where;\n      // console.log(query);\n      api = eval(query);\n      api.onSnapshot(function (snapshot) {\n        const data = [];\n        snapshot.docs.forEach(doc => {\n          data.push({\n            ...doc.data(),\n            id: doc.id\n          });\n        });\n        // console.log(\"data\", data);\n        callback && callback(data);\n      });\n      // return api.get();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  getDocWithMultiCondition = (collection, params, key, callback) => {\n    try {\n      var api;\n      var where = \"\";\n      params.where && params.where.map(function (item) {\n        // console.log(item)\n        if (typeof item[1] === \"object\") {\n          where += \".where('\" + item[0] + \".\" + item[1].id + \"','==','\" + item[1].name + \"')\";\n        } else {\n          where += \".where('\" + item[0] + \"','==','\" + item[1] + \"')\";\n        }\n      })\n      let query = 'this.db.collection(collection)' + where;\n      // console.log(query);\n      api = eval(query);\n      api.onSnapshot(function (snapshot) {\n        const data = [];\n        snapshot.docs.forEach(doc => {\n          data.push({\n            ...doc.data(),\n            id: doc.id\n          });\n        });\n        // console.log(\"data\", data);\n        callback && callback(data);\n      });\n      // return api.get();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  getDocWithMultiConditionSQL = (collection, params, key, callback) => {\n    try {\n      var where = \"\";\n      if (params.where) {\n        where = \" WHERE \";\n        params.where.map(function (item, idx) {\n          // console.log(idx)\n          if (typeof item[1] == \"object\") {\n            let item\n            item[2].map(function (item, idx) {\n\n            })\n            where += (idx == 0 ? \"\" : \" AND \") + \"`\" + item[0] + \"` IN '\" + item[1].id + \"'\";\n          } else {\n            where += (idx == 0 ? \"\" : \" AND \") + \"`\" + item[0] + \"` = '\" + item[1] + \"'\";\n          }\n        })\n      }\n\n      let query = 'SELECT * FROM ' + collection +\n        where +\n        ' ORDER BY createdAt DESC' +\n        ' LIMIT 2';\n      console.log(\"QUERY\", query);\n      const api = this.fireSQL.query(query);\n      api.then(data => {\n        console.log(\"data\", data);\n        callback && callback(data);\n      });\n      // return api.get();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n}\n\nexport default new Firebase();"]},"metadata":{},"sourceType":"module"}