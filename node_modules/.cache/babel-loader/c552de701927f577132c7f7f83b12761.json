{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _Select = require('./Select2');\n\nvar _Select2 = _interopRequireDefault(_Select);\n\nvar _stripDiacritics = require('./utils/stripDiacritics');\n\nvar _stripDiacritics2 = _interopRequireDefault(_stripDiacritics);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar propTypes = {\n  autoload: _react2.default.PropTypes.bool.isRequired,\n  // automatically call the `loadOptions` prop on-mount; defaults to true\n  cache: _react2.default.PropTypes.any,\n  // object to use to cache results; set to null/false to disable caching\n  children: _react2.default.PropTypes.func.isRequired,\n  // Child function responsible for creating the inner Select component; (props: Object): PropTypes.element\n  ignoreAccents: _react2.default.PropTypes.bool,\n  // strip diacritics when filtering; defaults to true\n  ignoreCase: _react2.default.PropTypes.bool,\n  // perform case-insensitive filtering; defaults to true\n  loadingPlaceholder: _react2.default.PropTypes.oneOfType([// replaces the placeholder while options are loading\n  _react2.default.PropTypes.string, _react2.default.PropTypes.node]),\n  loadOptions: _react2.default.PropTypes.func.isRequired,\n  // callback to load options asynchronously; (inputValue: string, callback: Function): ?Promise\n  multi: _react2.default.PropTypes.bool,\n  // multi-value input\n  options: _react.PropTypes.array.isRequired,\n  // array of options\n  placeholder: _react2.default.PropTypes.oneOfType([// field placeholder, displayed when there's no value (shared with Select)\n  _react2.default.PropTypes.string, _react2.default.PropTypes.node]),\n  noResultsText: _react2.default.PropTypes.oneOfType([// field noResultsText, displayed when no options come back from the server\n  _react2.default.PropTypes.string, _react2.default.PropTypes.node]),\n  onChange: _react2.default.PropTypes.func,\n  // onChange handler: function (newValue) {}\n  searchPromptText: _react2.default.PropTypes.oneOfType([// label to prompt for search input\n  _react2.default.PropTypes.string, _react2.default.PropTypes.node]),\n  onInputChange: _react2.default.PropTypes.func,\n  // optional for keeping track of what is being typed\n  value: _react2.default.PropTypes.any\n};\nvar defaultCache = {};\nvar defaultProps = {\n  autoload: true,\n  cache: defaultCache,\n  children: defaultChildren,\n  ignoreAccents: true,\n  ignoreCase: true,\n  loadingPlaceholder: 'Loading...',\n  options: [],\n  searchPromptText: 'Type to search'\n};\n\nvar Async = function (_Component) {\n  _inherits(Async, _Component);\n\n  function Async(props, context) {\n    _classCallCheck(this, Async);\n\n    var _this = _possibleConstructorReturn(this, (Async.__proto__ || Object.getPrototypeOf(Async)).call(this, props, context));\n\n    _this._cache = props.cache === defaultCache ? {} : props.cache;\n    _this.state = {\n      isLoading: false,\n      options: props.options\n    };\n    _this._onInputChange = _this._onInputChange.bind(_this);\n    return _this;\n  }\n\n  _createClass(Async, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var autoload = this.props.autoload;\n\n      if (autoload) {\n        this.loadOptions('');\n      }\n    }\n  }, {\n    key: 'componentWillUpdate',\n    value: function componentWillUpdate(nextProps, nextState) {\n      var _this2 = this;\n\n      var propertiesToSync = ['options'];\n      propertiesToSync.forEach(function (prop) {\n        if (_this2.props[prop] !== nextProps[prop]) {\n          _this2.setState(_defineProperty({}, prop, nextProps[prop]));\n        }\n      });\n    }\n  }, {\n    key: 'clearOptions',\n    value: function clearOptions() {\n      this.setState({\n        options: []\n      });\n    }\n  }, {\n    key: 'loadOptions',\n    value: function loadOptions(inputValue) {\n      var _this3 = this;\n\n      var loadOptions = this.props.loadOptions;\n      var cache = this._cache;\n\n      if (cache && cache.hasOwnProperty(inputValue)) {\n        this.setState({\n          options: cache[inputValue]\n        });\n        return;\n      }\n\n      var callback = function callback(error, data) {\n        if (callback === _this3._callback) {\n          _this3._callback = null;\n          var options = data && data.options || [];\n\n          if (cache) {\n            cache[inputValue] = options;\n          }\n\n          _this3.setState({\n            isLoading: false,\n            options: options\n          });\n        }\n      }; // Ignore all but the most recent request\n\n\n      this._callback = callback;\n      var promise = loadOptions(inputValue, callback);\n\n      if (promise) {\n        promise.then(function (data) {\n          return callback(null, data);\n        }, function (error) {\n          return callback(error);\n        });\n      }\n\n      if (this._callback && !this.state.isLoading) {\n        this.setState({\n          isLoading: true\n        });\n      }\n\n      return inputValue;\n    }\n  }, {\n    key: '_onInputChange',\n    value: function _onInputChange(inputValue) {\n      var _props = this.props,\n          ignoreAccents = _props.ignoreAccents,\n          ignoreCase = _props.ignoreCase,\n          onInputChange = _props.onInputChange;\n\n      if (ignoreAccents) {\n        inputValue = (0, _stripDiacritics2.default)(inputValue);\n      }\n\n      if (ignoreCase) {\n        inputValue = inputValue.toLowerCase();\n      }\n\n      if (onInputChange) {\n        onInputChange(inputValue);\n      }\n\n      return this.loadOptions(inputValue);\n    }\n  }, {\n    key: 'inputValue',\n    value: function inputValue() {\n      if (this.select) {\n        return this.select.state.inputValue;\n      }\n\n      return '';\n    }\n  }, {\n    key: 'noResultsText',\n    value: function noResultsText() {\n      var _props2 = this.props,\n          loadingPlaceholder = _props2.loadingPlaceholder,\n          noResultsText = _props2.noResultsText,\n          searchPromptText = _props2.searchPromptText;\n      var isLoading = this.state.isLoading;\n      var inputValue = this.inputValue();\n\n      if (isLoading) {\n        return loadingPlaceholder;\n      }\n\n      if (inputValue && noResultsText) {\n        return noResultsText;\n      }\n\n      return searchPromptText;\n    }\n  }, {\n    key: 'focus',\n    value: function focus() {\n      this.select.focus();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this4 = this;\n\n      var _props3 = this.props,\n          children = _props3.children,\n          loadingPlaceholder = _props3.loadingPlaceholder,\n          placeholder = _props3.placeholder;\n      var _state = this.state,\n          isLoading = _state.isLoading,\n          options = _state.options;\n      var props = {\n        noResultsText: this.noResultsText(),\n        placeholder: isLoading ? loadingPlaceholder : placeholder,\n        options: isLoading && loadingPlaceholder ? [] : options,\n        ref: function ref(_ref) {\n          return _this4.select = _ref;\n        },\n        onChange: function onChange(newValues) {\n          if (_this4.props.multi && _this4.props.value && newValues.length > _this4.props.value.length) {\n            _this4.clearOptions();\n          }\n\n          _this4.props.onChange(newValues);\n        }\n      };\n      return children(_extends({}, this.props, props, {\n        isLoading: isLoading,\n        onInputChange: this._onInputChange\n      }));\n    }\n  }]);\n\n  return Async;\n}(_react.Component);\n\nexports.default = Async;\nAsync.propTypes = propTypes;\nAsync.defaultProps = defaultProps;\n\nfunction defaultChildren(props) {\n  return _react2.default.createElement(_Select2.default, props);\n}\n\n;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}