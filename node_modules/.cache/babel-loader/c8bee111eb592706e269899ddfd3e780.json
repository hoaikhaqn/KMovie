{"ast":null,"code":"import _defineProperty from \"/home/h/Source/Project/movie-website/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/h/Source/Project/movie-website/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/h/Source/Project/movie-website/src/context/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { createContext, useContext, useReducer } from \"react\";\nimport { initialState, mainReducer } from \"./reducers\";\nconst StateContext = createContext();\nexport const StateProvider = props => {\n  const _useReducer = useReducer(mainReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  const getDocumentById = (collection, id) => {\n    firebase.getDocument(collection, id).then(rs => {\n      dispatch({\n        type: \"GET_MOVIE_ITEM\",\n        data: {\n          item: _objectSpread({}, rs.data(), {\n            id: rs.id\n          })\n        }\n      });\n    });\n  };\n\n  const getCollection = (collection, params, key) => {\n    var aData = [];\n    var obj = {};\n    firebase.getData(collection, params).then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        aData.push(_objectSpread({}, doc.data(), {\n          id: doc.id\n        }));\n      });\n      obj[key || collection] = aData;\n      dispatch({\n        type: \"GET_LISTDATA\",\n        data: _objectSpread({}, obj)\n      });\n    });\n  };\n\n  const setDocument = (collection, id, data) => {\n    firebase.setDocument(collection, id, data);\n  };\n\n  const value = {\n    state,\n    dispatch,\n    firebase,\n    getDocumentById,\n    getCollection,\n    setDocument\n  }; // const getListByField = (key,params) => {\n  //   var aData = [];var objData = {}\n  //   firebase.getData(\"movie\",params).then(function (querySnapshot) {\n  //     querySnapshot.forEach(function (doc) {\n  //       if(Array.isArray(doc.data()[key])){\n  //         doc.data()[key].forEach(function(item){\n  //           if(aData.findIndex(i => i.id === item.id)===-1)\n  //           aData.push(item);\n  //         })\n  //       }\n  //       else{\n  //         if(aData.findIndex(i => i.id === doc.data()[key].id)===-1)\n  //         aData.push(doc.data()[key])\n  //       }\n  //     });\n  //     objData[key] = aData;\n  //     dispatch({ type: \"GET_MOVIES\", data: {...objData} });\n  //   });\n  // };\n\n  return React.createElement(StateContext.Provider, {\n    value: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, props.children);\n};\nexport const useReduceState = () => useContext(StateContext);\nexport const firebase = require(\"./firebase\").default;","map":{"version":3,"sources":["/home/h/Source/Project/movie-website/src/context/index.js"],"names":["React","createContext","useContext","useReducer","initialState","mainReducer","StateContext","StateProvider","props","state","dispatch","getDocumentById","collection","id","firebase","getDocument","then","rs","type","data","item","getCollection","params","key","aData","obj","getData","querySnapshot","forEach","doc","push","setDocument","value","children","useReduceState","require","default"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,UAA3C,QAA6D,OAA7D;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,YAA1C;AACA,MAAMC,YAAY,GAAGL,aAAa,EAAlC;AACA,OAAO,MAAMM,aAAa,GAAGC,KAAK,IAAI;AAAA,sBACVL,UAAU,CAACE,WAAD,EAAcD,YAAd,CADA;AAAA;AAAA,QAC7BK,KAD6B;AAAA,QACtBC,QADsB;;AAGpC,QAAMC,eAAe,GAAG,CAACC,UAAD,EAAYC,EAAZ,KAAmB;AACzCC,IAAAA,QAAQ,CAACC,WAAT,CAAqBH,UAArB,EAAgCC,EAAhC,EAAoCG,IAApC,CAAyCC,EAAE,IAAI;AAC7CP,MAAAA,QAAQ,CAAC;AAAEQ,QAAAA,IAAI,EAAE,gBAAR;AAA0BC,QAAAA,IAAI,EAAE;AAACC,UAAAA,IAAI,oBAAKH,EAAE,CAACE,IAAH,EAAL;AAAeN,YAAAA,EAAE,EAACI,EAAE,CAACJ;AAArB;AAAL;AAAhC,OAAD,CAAR;AACD,KAFD;AAGD,GAJD;;AAKA,QAAMQ,aAAa,GAAG,CAACT,UAAD,EAAYU,MAAZ,EAAmBC,GAAnB,KAA2B;AAC/C,QAAIC,KAAK,GAAG,EAAZ;AAAe,QAAIC,GAAG,GAAG,EAAV;AACfX,IAAAA,QAAQ,CAACY,OAAT,CAAiBd,UAAjB,EAA4BU,MAA5B,EAAoCN,IAApC,CAAyC,UAAUW,aAAV,EAAyB;AAChEA,MAAAA,aAAa,CAACC,OAAd,CAAsB,UAAUC,GAAV,EAAe;AACnCL,QAAAA,KAAK,CAACM,IAAN,mBAAgBD,GAAG,CAACV,IAAJ,EAAhB;AAA4BN,UAAAA,EAAE,EAAEgB,GAAG,CAAChB;AAApC;AACD,OAFD;AAGAY,MAAAA,GAAG,CAACF,GAAG,IAAEX,UAAN,CAAH,GAAuBY,KAAvB;AACAd,MAAAA,QAAQ,CAAC;AAAEQ,QAAAA,IAAI,EAAE,cAAR;AAAwBC,QAAAA,IAAI,oBAAMM,GAAN;AAA5B,OAAD,CAAR;AACD,KAND;AAOD,GATD;;AAUA,QAAMM,WAAW,GAAG,CAACnB,UAAD,EAAYC,EAAZ,EAAeM,IAAf,KAAwB;AAC1CL,IAAAA,QAAQ,CAACiB,WAAT,CAAqBnB,UAArB,EAAgCC,EAAhC,EAAmCM,IAAnC;AACD,GAFD;;AAGA,QAAMa,KAAK,GAAG;AACZvB,IAAAA,KADY;AAEZC,IAAAA,QAFY;AAGZI,IAAAA,QAHY;AAIZH,IAAAA,eAJY;AAKZU,IAAAA,aALY;AAMZU,IAAAA;AANY,GAAd,CArBoC,CA6BpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAO,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCxB,KAAK,CAACyB,QAA5C,CAAP;AACD,CAjDM;AAkDP,OAAO,MAAMC,cAAc,GAAG,MAAMhC,UAAU,CAACI,YAAD,CAAvC;AAEP,OAAO,MAAMQ,QAAQ,GAAGqB,OAAO,CAAC,YAAD,CAAP,CAAsBC,OAAvC","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\nimport { initialState, mainReducer } from \"./reducers\";\nconst StateContext = createContext();\nexport const StateProvider = props => {\n  const [state, dispatch] = useReducer(mainReducer, initialState);\n\n  const getDocumentById = (collection,id) => {\n    firebase.getDocument(collection,id).then(rs => {\n      dispatch({ type: \"GET_MOVIE_ITEM\", data: {item:{...rs.data(),id:rs.id} }});\n    });\n  };\n  const getCollection = (collection,params,key) => {\n    var aData = [];var obj = {}\n    firebase.getData(collection,params).then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        aData.push({ ...doc.data(), id: doc.id })\n      });\n      obj[key||collection] = aData;\n      dispatch({ type: \"GET_LISTDATA\", data: {...obj} });\n    });\n  };\n  const setDocument = (collection,id,data) => {\n    firebase.setDocument(collection,id,data);\n  };\n  const value = {\n    state,\n    dispatch,\n    firebase,\n    getDocumentById,\n    getCollection,\n    setDocument\n  };\n  // const getListByField = (key,params) => {\n  //   var aData = [];var objData = {}\n  //   firebase.getData(\"movie\",params).then(function (querySnapshot) {\n  //     querySnapshot.forEach(function (doc) {\n  //       if(Array.isArray(doc.data()[key])){\n  //         doc.data()[key].forEach(function(item){\n  //           if(aData.findIndex(i => i.id === item.id)===-1)\n  //           aData.push(item);\n  //         })\n  //       }\n  //       else{\n  //         if(aData.findIndex(i => i.id === doc.data()[key].id)===-1)\n  //         aData.push(doc.data()[key])\n  //       }\n  //     });\n  //     objData[key] = aData;\n  //     dispatch({ type: \"GET_MOVIES\", data: {...objData} });\n  //   });\n  // };\n  return <StateContext.Provider value={value}>{props.children}</StateContext.Provider>;\n};\nexport const useReduceState = () => useContext(StateContext);\n\nexport const firebase = require(\"./firebase\").default;\n"]},"metadata":{},"sourceType":"module"}