{"ast":null,"code":"import app from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firebase-firestore\"; // import { toast } from \"react-toastify\";\n\nimport Config from \"../config\";\n\nclass Firebase {\n  constructor() {\n    this.getUid = user => {\n      !user && (user = this.auth.currentUser);\n      return user && (user.email || user.providerData[0] && user.providerData[0].uid || user.uid);\n    };\n\n    this.checkSession = user => {\n      !user && (user = this.auth.currentUser); // console.log(\"user.metadata.b\", user && user.metadata.b);\n\n      return user && new Date().getTime() - user.metadata.b < 86400000; //1 hour\n    };\n\n    app.initializeApp(Config._env.firebase);\n    this.auth = app.auth();\n    this.db = app.firestore();\n    this.authGoogle = new app.auth.GoogleAuthProvider();\n    this.authGoogle.setCustomParameters({\n      prompt: \"select_account\"\n    });\n    this.authFacebook = new app.auth.FacebookAuthProvider();\n    this.authFacebook.setCustomParameters({\n      prompt: \"select_account\"\n    });\n  }\n\n  isInitialized() {\n    return new Promise(resolve => {\n      this.auth.onAuthStateChanged(resolve);\n    });\n  }\n\n  getCurrentUsername() {\n    return this.auth.currentUser;\n  }\n\n  getUserLogIn() {\n    return this.db.doc(\"account/\" + this.getUid()).get();\n  }\n\n  logout() {\n    return this.auth.signOut();\n  } //------------------------------------------------------------------------//\n\n\n  getDataWithCondition(c, p) {\n    return p ? this.db.collection(c).where(p.where[0], p.where[1], p.where[2]).orderBy(p.order ? p.order[0] : \"createdAt\", p.order ? p.order[1] : \"desc\").limit(p.limit ? p.limit : 1000).get(p.get && p.get) : this.db.collection(c).get();\n  }\n\n  getData(c, p) {\n    return p ? this.db.collection(c).orderBy(p.order ? p.order[0] : \"createdAt\", p.order ? p.order[1] : \"desc\").limit(p.limit ? p.limit : 1000).get(p.get && p.get) : this.db.collection(c).get();\n  }\n\n  getMovieItem(id) {\n    return this.db.collection(\"movie\").doc(id).get();\n  }\n\n  setMovieItem(id, data) {\n    return this.db.collection(\"movie\").doc(id).set(data);\n  }\n\n}\n\nexport default new Firebase();","map":{"version":3,"sources":["/home/h/Source/Project/movie-website/src/context/firebase.js"],"names":["app","Config","Firebase","constructor","getUid","user","auth","currentUser","email","providerData","uid","checkSession","Date","getTime","metadata","b","initializeApp","_env","firebase","db","firestore","authGoogle","GoogleAuthProvider","setCustomParameters","prompt","authFacebook","FacebookAuthProvider","isInitialized","Promise","resolve","onAuthStateChanged","getCurrentUsername","getUserLogIn","doc","get","logout","signOut","getDataWithCondition","c","p","collection","where","orderBy","order","limit","getData","getMovieItem","id","setMovieItem","data","set"],"mappings":"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","sourcesContent":["import app from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firebase-firestore\";\n// import { toast } from \"react-toastify\";\nimport Config from \"../config\";\nclass Firebase {\n  constructor() {\n    app.initializeApp(Config._env.firebase);\n    this.auth = app.auth();\n    this.db = app.firestore();\n    this.authGoogle = new app.auth.GoogleAuthProvider();\n    this.authGoogle.setCustomParameters({\n      prompt: \"select_account\"\n    });\n    this.authFacebook = new app.auth.FacebookAuthProvider();\n    this.authFacebook.setCustomParameters({\n      prompt: \"select_account\"\n    });\n  }\n  isInitialized() {\n    return new Promise(resolve => {\n      this.auth.onAuthStateChanged(resolve);\n    });\n  }\n  getCurrentUsername() {\n    return this.auth.currentUser;\n  }\n  getUserLogIn() {\n    return this.db.doc(\"account/\" + this.getUid()).get();\n  }\n  getUid = user => {\n    !user && (user = this.auth.currentUser);\n    return user && (user.email || (user.providerData[0] && user.providerData[0].uid) || user.uid);\n  };\n  checkSession = user => {\n    !user && (user = this.auth.currentUser);\n    // console.log(\"user.metadata.b\", user && user.metadata.b);\n    return user && new Date().getTime() - user.metadata.b < 86400000; //1 hour\n  };\n\n  logout() {\n    return this.auth.signOut();\n  }\n  //------------------------------------------------------------------------//\n  getDataWithCondition(c,p) {\n    return p ? this.db\n    .collection(c)\n    .where(p.where[0],p.where[1],p.where[2])\n    .orderBy(p.order?p.order[0]:\"createdAt\",p.order?p.order[1]:\"desc\")\n    .limit(p.limit?p.limit:1000)\n    .get(p.get && p.get)\n    :\n    this.db.collection(c).get();\n  }\n  getData(c,p) {\n    return p ? this.db\n    .collection(c)\n    .orderBy(p.order?p.order[0]:\"createdAt\",p.order?p.order[1]:\"desc\")\n    .limit(p.limit?p.limit:1000)\n    .get(p.get && p.get)\n    :\n    this.db.collection(c).get();\n  }\n  getMovieItem(id) {\n    return this.db.collection(\"movie\").doc(id).get();\n  }\n  setMovieItem(id,data) {\n    return this.db.collection(\"movie\").doc(id).set(data);\n  }\n}\n\nexport default new Firebase();\n"]},"metadata":{},"sourceType":"module"}