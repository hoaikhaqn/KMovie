{"ast":null,"code":"import _defineProperty from \"/home/h/Source/Project/movie-website/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst table = (state, action) => {\n  switch (action.type) {\n    case 'setTable':\n      var table = state;\n      !table[action.idtable] && (table[action.idtable] = {\n        limit: 10,\n        skip: 1,\n        orderBy: [\"updated_at\", \"desc\"],\n        query: {}\n      });\n      action.key && (table[action.idtable][action.key] = action.payload); // action.key && console.log(\"action.idtable: \", action.idtable, \"action.key: \", action.key, \":\", action.payload)\n      // log.debug(action.idtable, \":\", table[action.idtable])\n\n      return _objectSpread({}, state, {\n        table\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default table;","map":{"version":3,"sources":["/home/h/Source/Project/movie-website/src/context/reducers/table.js"],"names":["table","state","action","type","idtable","limit","skip","orderBy","query","key","payload"],"mappings":";;;;;;AAAA,MAAMA,KAAK,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC7B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,UAAL;AACI,UAAIH,KAAK,GAAGC,KAAZ;AACA,OAACD,KAAK,CAACE,MAAM,CAACE,OAAR,CAAN,KAA2BJ,KAAK,CAACE,MAAM,CAACE,OAAR,CAAL,GAAwB;AAC/CC,QAAAA,KAAK,EAAE,EADwC;AAE/CC,QAAAA,IAAI,EAAE,CAFyC;AAG/CC,QAAAA,OAAO,EAAE,CAAC,YAAD,EAAe,MAAf,CAHsC;AAI/CC,QAAAA,KAAK,EAAE;AAJwC,OAAnD;AAMAN,MAAAA,MAAM,CAACO,GAAP,KAAeT,KAAK,CAACE,MAAM,CAACE,OAAR,CAAL,CAAsBF,MAAM,CAACO,GAA7B,IAAoCP,MAAM,CAACQ,OAA1D,EARJ,CASI;AACA;;AACA,+BACOT,KADP;AAEID,QAAAA;AAFJ;;AAIJ;AACI,aAAOC,KAAP;AAjBR;AAmBH,CApBD;;AAqBA,eAAeD,KAAf","sourcesContent":["const table = (state, action) => {\n    switch (action.type) {\n        case 'setTable':\n            var table = state\n            !table[action.idtable] && (table[action.idtable] = {\n                limit: 10,\n                skip: 1,\n                orderBy: [\"updated_at\", \"desc\"],\n                query: {}\n            })\n            action.key && (table[action.idtable][action.key] = action.payload)\n            // action.key && console.log(\"action.idtable: \", action.idtable, \"action.key: \", action.key, \":\", action.payload)\n            // log.debug(action.idtable, \":\", table[action.idtable])\n            return {\n                ...state,\n                table\n            }\n        default:\n            return state;\n    }\n};\nexport default table;"]},"metadata":{},"sourceType":"module"}