{"version":3,"sources":["context/reducers/movie.js","context/reducers/index.js","context/index.js","config/index.js","config/config_url.js","context/firebase.js","config/config_url.prod.js","App.js","serviceWorker.js","index.js"],"names":["movie","state","action","type","data","mainReducer","movieReducer","initialState","undefined","StateContext","createContext","StateProvider","props","useReducer","dispatch","value","firebase","getDocumentById","collection","id","getDocument","then","rs","item","getCollection","params","key","aData","obj","getData","querySnapshot","forEach","doc","push","setDocument","Provider","children","useReduceState","useContext","require","default","_env","ConfigURL","module","exports","Firebase","getUid","user","auth","currentUser","email","providerData","uid","checkSession","Date","getTime","metadata","b","getDocWithCondition","callback","db","where","name","onSnapshot","snapshot","docs","error","console","getDocWithMultiCondition","api","query","eval","orderBy","sort","a","createdAt","getDocWithKeyword","fireSQL","app","initializeApp","Config","this","firestore","FireSQL","authGoogle","GoogleAuthProvider","setCustomParameters","prompt","authFacebook","FacebookAuthProvider","Promise","resolve","onAuthStateChanged","get","signOut","order","limit","cb","set","catch","API_URL","logLev","CLIENT_URL","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","DefaultLayout","React","lazy","Login","Register","Page404","Page500","App","useState","firebaseInitialized","setFirebaseInitialized","useEffect","isInitialized","val","Suspense","fallback","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a2992556.chunk.js","sourcesContent":["const movie = (state, action) => {\r\n  switch (action.type) {\r\n    case \"GET_LISTDATA\":\r\n      return action.data;\r\n    case \"GET_MOVIE_ITEM\":\r\n      return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default movie;\r\n","import movieReducer from \"./movie\";\r\nexport const mainReducer = ({ data }, action) => ({\r\n  data : {...data,...movieReducer(data, action)}\r\n});\r\nexport const initialState = { data: undefined };\r\n","import React, { createContext, useContext, useReducer } from \"react\";\r\nimport { initialState, mainReducer } from \"./reducers\";\r\nconst StateContext = createContext();\r\nexport const StateProvider = props => {\r\n  const [state, dispatch] = useReducer(mainReducer, initialState);\r\n\r\n  const getDocumentById = (collection,id) => {\r\n    firebase.getDocument(collection,id).then(rs => {\r\n      dispatch({ type: \"GET_MOVIE_ITEM\", data: {item:{...rs.data(),id:rs.id} }});\r\n    });\r\n  };\r\n  const getCollection = (collection,params,key) => {\r\n    var aData = [];var obj = {}\r\n    firebase.getData(collection,params).then(function (querySnapshot) {\r\n      querySnapshot.forEach(function (doc) {\r\n        aData.push({ ...doc.data(), id: doc.id })\r\n      });\r\n      obj[key||collection] = aData;\r\n      dispatch({ type: \"GET_LISTDATA\", data: {...obj} });\r\n    });\r\n  };\r\n  const setDocument = (collection,id,data) => {\r\n    firebase.setDocument(collection,id,data);\r\n  };\r\n  const value = {\r\n    state,\r\n    dispatch,\r\n    firebase,\r\n    getDocumentById,\r\n    getCollection,\r\n    setDocument\r\n  };\r\n  // const getListByField = (key,params) => {\r\n  //   var aData = [];var objData = {}\r\n  //   firebase.getData(\"movie\",params).then(function (querySnapshot) {\r\n  //     querySnapshot.forEach(function (doc) {\r\n  //       if(Array.isArray(doc.data()[key])){\r\n  //         doc.data()[key].forEach(function(item){\r\n  //           if(aData.findIndex(i => i.id === item.id)===-1)\r\n  //           aData.push(item);\r\n  //         })\r\n  //       }\r\n  //       else{\r\n  //         if(aData.findIndex(i => i.id === doc.data()[key].id)===-1)\r\n  //         aData.push(doc.data()[key])\r\n  //       }\r\n  //     });\r\n  //     objData[key] = aData;\r\n  //     dispatch({ type: \"GET_MOVIES\", data: {...objData} });\r\n  //   });\r\n  // };\r\n  return <StateContext.Provider value={value}>{props.children}</StateContext.Provider>;\r\n};\r\nexport const useReduceState = () => useContext(StateContext);\r\n\r\nexport const firebase = require(\"./firebase\").default;\r\n","import ConfigURL from './config_url'\r\n\r\nexport default   {\r\n    _env: ConfigURL,\r\n};","if (process.env.NODE_ENV === 'production') {\r\n  module.exports = require('./config_url.prod')\r\n} else {\r\n  module.exports = require('./config_url.dev')\r\n}\r\n","/*eslint-disable no-eval */\r\nimport {\r\n  FireSQL\r\n} from 'firesql';\r\nimport app from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firebase-firestore\";\r\n// import { toast } from \"react-toastify\";\r\nimport Config from \"../config\";\r\nclass Firebase {\r\n  constructor() {\r\n    app.initializeApp(Config._env.firebase);\r\n    this.auth = app.auth();\r\n    this.db = app.firestore();\r\n    this.fireSQL = new FireSQL(this.db);\r\n    this.authGoogle = new app.auth.GoogleAuthProvider();\r\n    this.authGoogle.setCustomParameters({\r\n      prompt: \"select_account\"\r\n    });\r\n    this.authFacebook = new app.auth.FacebookAuthProvider();\r\n    this.authFacebook.setCustomParameters({\r\n      prompt: \"select_account\"\r\n    });\r\n  }\r\n  isInitialized() {\r\n    return new Promise(resolve => {\r\n      this.auth.onAuthStateChanged(resolve);\r\n    });\r\n  }\r\n  getCurrentUsername() {\r\n    return this.auth.currentUser;\r\n  }\r\n  getUserLogIn() {\r\n    return this.db.doc(\"account/\" + this.getUid()).get();\r\n  }\r\n  getUid = user => {\r\n    !user && (user = this.auth.currentUser);\r\n    return user && (user.email || (user.providerData[0] && user.providerData[0].uid) || user.uid);\r\n  };\r\n  checkSession = user => {\r\n    !user && (user = this.auth.currentUser);\r\n    // console.log(\"user.metadata.b\", user && user.metadata.b);\r\n    return user && new Date().getTime() - user.metadata.b < 86400000; //1 hour\r\n  };\r\n\r\n  logout() {\r\n    return this.auth.signOut();\r\n  }\r\n  //------------------------------------------------------------------------//\r\n  getData(collection,params) {\r\n    return params ?\r\n      this.db\r\n      .collection(collection)\r\n      .orderBy(params.order ? params.order[0] : \"createdAt\", params.order ? params.order[1] : \"desc\")\r\n      .limit(params.limit ? params.limit : 1000)\r\n      .get(params.get && params.get) :\r\n      this.db.collection(collection).get();\r\n  }\r\n  getDocument(collection, id) {\r\n    return this.db\r\n      .collection(collection)\r\n      .doc(id)\r\n      .get();\r\n  }\r\n  setDocument(collection, id, data, cb) {\r\n    this.db\r\n      .collection(collection)\r\n      .doc(id)\r\n      .set(data)\r\n      .then(function () {\r\n        cb && cb(true);\r\n      })\r\n      .catch(function (error) {\r\n        cb && cb(false);\r\n      });\r\n   \r\n  }\r\n\r\n  // ----------\r\n  getDocWithCondition = (collection, params, callback) => {\r\n    try {\r\n      var api = this.db.collection(collection)\r\n        .where(params.where[0] + (\r\n            typeof params.where[1] === \"object\" ? \".\" + params.where[1].id : \"\"), \"==\",\r\n          typeof params.where[1] === \"object\" ? params.where[1].name : params.where[1]);\r\n\r\n      api.onSnapshot(function (snapshot) {\r\n        const data = [];\r\n        snapshot.docs.forEach(doc => {\r\n          data.push({\r\n            ...doc.data(),\r\n            id: doc.id\r\n          });\r\n        });\r\n        // console.log(\"data\", data);\r\n        callback && callback(data);\r\n      });\r\n      // return api.get();\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  getDocWithMultiCondition = (collection, params, callback) => {\r\n    try {\r\n      var api;\r\n      var where = \"\";\r\n      params.where && params.where.forEach(item => {\r\n        if (typeof item[1] === \"object\") {\r\n          where += \".where('\" + item[0] + \".\" + item[1].id + \"','==','\" + item[1].name + \"')\";\r\n        } else {\r\n          where += \".where('\" + item[0] + \"','==','\" + item[1] + \"')\";\r\n        }\r\n      })\r\n      let query = `this.db.collection('${collection}')${where}`;\r\n      // console.log(query);\r\n      api = eval(query);\r\n      api.onSnapshot(function (snapshot) {\r\n        const data = [];\r\n        snapshot.docs.forEach(doc => {\r\n          data.push({\r\n            ...doc.data(),\r\n            id: doc.id\r\n          });\r\n        });\r\n        if (params.orderBy) {\r\n          data.sort(function (a, b) {\r\n            return (params.orderBy[1] === \"asc\" ? 1 : -1) * (a[params.orderBy[0]] - b[params.orderBy[0]])\r\n          })\r\n        } else {\r\n          data.sort(function (a, b) {\r\n            return b.createdAt - a.createdAt;\r\n          })\r\n        }\r\n        // console.log(\"data\", data);\r\n        callback && callback(data);\r\n      });\r\n      // return api.get();\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  // getDocWithMultiConditionSQL = (collection, params,callback) => {\r\n  //   try {\r\n  //     var where = \"\";\r\n  //     if (params.where) {\r\n  //       where = \" WHERE \";\r\n  //       params.where.map(function (item, idx) {\r\n  //         if (typeof item[1] === \"object\") {\r\n  //           where += (idx === 0 ? \"\" : \" AND \") + \"`\" + item[0] + \"` IN '\" + item[1].id + \"'\";\r\n  //         } else {\r\n  //           where += (idx === 0 ? \"\" : \" AND \") + \"`\" + item[0] + \"` = '\" + item[1] + \"'\";\r\n  //         }\r\n  //       })\r\n  //     }\r\n\r\n  //     let query = 'SELECT * FROM ' + collection +\r\n  //       where +\r\n  //       ' ORDER BY createdAt DESC' +\r\n  //       ' LIMIT 2';\r\n  //     console.log(\"QUERY\", query);\r\n  //     const api = this.fireSQL.query(query);\r\n  //     api.then(data => {\r\n  //       console.log(\"data\", data);\r\n  //       callback && callback(data);\r\n  //     });\r\n  //     // return api.get();\r\n  //   } catch (error) {\r\n  //     console.error(error);\r\n  //   }\r\n  // };\r\n  getDocWithKeyword = (collection, params, callback) => {\r\n    try {\r\n      let query = `SELECT * FROM ${collection} WHERE ${params.where[0]} OR ${params.where[1]}`;\r\n      // console.log(\"QUERY\", query);\r\n      const api = this.fireSQL.query(query);\r\n      api.then(data => {\r\n        if (params.orderBy) {\r\n          data.sort(function (a, b) {\r\n            return (params.orderBy[1] === \"asc\" ? 1 : -1) * (a[params.orderBy[0]] - b[params.orderBy[0]])\r\n          })\r\n        } else {\r\n          data.sort(function (a, b) {\r\n            return b.createdAt - a.createdAt;\r\n          })\r\n        }\r\n        // console.log(\"data\", data);\r\n        callback && callback(data);\r\n      });\r\n      // return api.get();\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n}\r\n\r\nexport default new Firebase();","module.exports = {\r\n  API_URL: \"\",\r\n  logLev: 3,\r\n  CLIENT_URL: \"\",\r\n  firebase: {\r\n    apiKey: \"AIzaSyAU36mdrDdmCxs6G6ediprtZqoxvv0IJ3Y\",\r\n    authDomain: \"authen-80412.firebaseapp.com\",\r\n    databaseURL: \"https://authen-80412.firebaseio.com\",\r\n    projectId: \"authen-80412\",\r\n    storageBucket: \"authen-80412.appspot.com\",\r\n    messagingSenderId: \"889189420817\",\r\n    appId: \"1:889189420817:web:6934064073ecb692\"\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { firebase } from \"./context\";\r\nimport \"./assets/css/App.css\";\r\nimport { StateProvider } from \"./context\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport \"react-icofont\";\r\n\r\nconst loading = () => <div></div>;\r\n\r\n// Containers\r\nconst DefaultLayout = React.lazy(() => import(\"./containers/DefaultLayout\"));\r\n\r\n// Pages\r\nconst Login = React.lazy(() => import(\"./views/Pages/Login\"));\r\nconst Register = React.lazy(() => import(\"./views/Pages/Register\"));\r\nconst Page404 = React.lazy(() => import(\"./views/Pages/Page404\"));\r\nconst Page500 = React.lazy(() => import(\"./views/Pages/Page500\"));\r\n\r\nfunction App() {\r\n  const [firebaseInitialized, setFirebaseInitialized] = useState(false);\r\n\r\n  useEffect(() => {\r\n    firebase.isInitialized().then(val => {\r\n      setFirebaseInitialized(val);\r\n    });\r\n  });\r\n\r\n  return firebaseInitialized !== false ? (\r\n    <StateProvider>\r\n      <HashRouter>\r\n        <React.Suspense fallback={loading()}>\r\n          <Switch>\r\n            <Route exact path=\"/login\" name=\"Login Page\" render={props => <Login {...props} />} />\r\n            <Route exact path=\"/register\" name=\"Register Page\" render={props => <Register {...props} />} />\r\n            <Route exact path=\"/404\" name=\"Page 404\" render={props => <Page404 {...props} />} />\r\n            <Route exact path=\"/500\" name=\"Page 500\" render={props => <Page500 {...props} />} />\r\n            <Route path=\"/\" name=\"Home\" render={props => <DefaultLayout {...props} />} />\r\n          </Switch>\r\n        </React.Suspense>\r\n      </HashRouter>\r\n    </StateProvider>\r\n  ) : (\r\n      <div></div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\n \r\nReactDOM.render(<App/>, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}