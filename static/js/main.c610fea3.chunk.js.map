{"version":3,"sources":["context/reducers/movie.js","context/reducers/index.js","context/index.js","config/index.js","config/config_url.js","context/firebase.js","config/config_url.prod.js","App.js","serviceWorker.js","index.js"],"names":["movie","state","action","type","data","mainReducer","movieReducer","initialState","undefined","StateContext","createContext","StateProvider","props","useReducer","dispatch","value","firebase","getDocumentById","collection","id","getDocument","then","rs","item","getCollection","params","key","aData","obj","getData","querySnapshot","forEach","doc","push","setDocument","Provider","children","useReduceState","useContext","require","default","_env","ConfigURL","module","exports","Firebase","getUid","user","auth","currentUser","email","providerData","uid","checkSession","Date","getTime","metadata","b","getDocWithCondition","callback","db","where","name","onSnapshot","snapshot","docs","error","console","getDocWithMultiCondition","api","query","eval","orderBy","sort","a","createdAt","getDocWithKeyword","fireSQL","app","initializeApp","Config","this","firestore","FireSQL","authGoogle","GoogleAuthProvider","setCustomParameters","prompt","authFacebook","FacebookAuthProvider","Promise","resolve","onAuthStateChanged","get","signOut","order","limit","cb","set","catch","API_URL","logLev","CLIENT_URL","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","loading","DefaultLayout","React","lazy","Login","Register","Page404","Page500","App","useState","firebaseInitialized","setFirebaseInitialized","useEffect","isInitialized","val","Suspense","fallback","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c610fea3.chunk.js","sourcesContent":["const movie = (state, action) => {\n  switch (action.type) {\n    case \"GET_LISTDATA\":\n      return action.data;\n    case \"GET_MOVIE_ITEM\":\n      return action.data;\n    default:\n      return state;\n  }\n};\nexport default movie;\n","import movieReducer from \"./movie\";\nexport const mainReducer = ({ data }, action) => ({\n  data : {...data,...movieReducer(data, action)}\n});\nexport const initialState = { data: undefined };\n","import React, { createContext, useContext, useReducer } from \"react\";\nimport { initialState, mainReducer } from \"./reducers\";\nconst StateContext = createContext();\nexport const StateProvider = props => {\n  const [state, dispatch] = useReducer(mainReducer, initialState);\n\n  const getDocumentById = (collection,id) => {\n    firebase.getDocument(collection,id).then(rs => {\n      dispatch({ type: \"GET_MOVIE_ITEM\", data: {item:{...rs.data(),id:rs.id} }});\n    });\n  };\n  const getCollection = (collection,params,key) => {\n    var aData = [];var obj = {}\n    firebase.getData(collection,params).then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        aData.push({ ...doc.data(), id: doc.id })\n      });\n      obj[key||collection] = aData;\n      dispatch({ type: \"GET_LISTDATA\", data: {...obj} });\n    });\n  };\n  const setDocument = (collection,id,data) => {\n    firebase.setDocument(collection,id,data);\n  };\n  const value = {\n    state,\n    dispatch,\n    firebase,\n    getDocumentById,\n    getCollection,\n    setDocument\n  };\n  // const getListByField = (key,params) => {\n  //   var aData = [];var objData = {}\n  //   firebase.getData(\"movie\",params).then(function (querySnapshot) {\n  //     querySnapshot.forEach(function (doc) {\n  //       if(Array.isArray(doc.data()[key])){\n  //         doc.data()[key].forEach(function(item){\n  //           if(aData.findIndex(i => i.id === item.id)===-1)\n  //           aData.push(item);\n  //         })\n  //       }\n  //       else{\n  //         if(aData.findIndex(i => i.id === doc.data()[key].id)===-1)\n  //         aData.push(doc.data()[key])\n  //       }\n  //     });\n  //     objData[key] = aData;\n  //     dispatch({ type: \"GET_MOVIES\", data: {...objData} });\n  //   });\n  // };\n  return <StateContext.Provider value={value}>{props.children}</StateContext.Provider>;\n};\nexport const useReduceState = () => useContext(StateContext);\n\nexport const firebase = require(\"./firebase\").default;\n","import ConfigURL from './config_url'\n\nexport default   {\n    _env: ConfigURL,\n};","if (process.env.NODE_ENV === 'production') {\n  module.exports = require('./config_url.prod')\n} else {\n  module.exports = require('./config_url.dev')\n}\n","/*eslint-disable no-eval */\nimport {\n  FireSQL\n} from 'firesql';\nimport app from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firebase-firestore\";\n// import { toast } from \"react-toastify\";\nimport Config from \"../config\";\nclass Firebase {\n  constructor() {\n    app.initializeApp(Config._env.firebase);\n    this.auth = app.auth();\n    this.db = app.firestore();\n    this.fireSQL = new FireSQL(this.db);\n    this.authGoogle = new app.auth.GoogleAuthProvider();\n    this.authGoogle.setCustomParameters({\n      prompt: \"select_account\"\n    });\n    this.authFacebook = new app.auth.FacebookAuthProvider();\n    this.authFacebook.setCustomParameters({\n      prompt: \"select_account\"\n    });\n  }\n  isInitialized() {\n    return new Promise(resolve => {\n      this.auth.onAuthStateChanged(resolve);\n    });\n  }\n  getCurrentUsername() {\n    return this.auth.currentUser;\n  }\n  getUserLogIn() {\n    return this.db.doc(\"account/\" + this.getUid()).get();\n  }\n  getUid = user => {\n    !user && (user = this.auth.currentUser);\n    return user && (user.email || (user.providerData[0] && user.providerData[0].uid) || user.uid);\n  };\n  checkSession = user => {\n    !user && (user = this.auth.currentUser);\n    // console.log(\"user.metadata.b\", user && user.metadata.b);\n    return user && new Date().getTime() - user.metadata.b < 86400000; //1 hour\n  };\n\n  logout() {\n    return this.auth.signOut();\n  }\n  //------------------------------------------------------------------------//\n  getData(collection,params) {\n    return params ?\n      this.db\n      .collection(collection)\n      .orderBy(params.order ? params.order[0] : \"createdAt\", params.order ? params.order[1] : \"desc\")\n      .limit(params.limit ? params.limit : 1000)\n      .get(params.get && params.get) :\n      this.db.collection(collection).get();\n  }\n  getDocument(collection, id) {\n    return this.db\n      .collection(collection)\n      .doc(id)\n      .get();\n  }\n  setDocument(collection, id, data, cb) {\n    this.db\n      .collection(collection)\n      .doc(id)\n      .set(data)\n      .then(function () {\n        cb && cb(true);\n      })\n      .catch(function (error) {\n        cb && cb(false);\n      });\n   \n  }\n\n  // ----------\n  getDocWithCondition = (collection, params, callback) => {\n    try {\n      var api = this.db.collection(collection)\n        .where(params.where[0] + (\n            typeof params.where[1] === \"object\" ? \".\" + params.where[1].id : \"\"), \"==\",\n          typeof params.where[1] === \"object\" ? params.where[1].name : params.where[1]);\n\n      api.onSnapshot(function (snapshot) {\n        const data = [];\n        snapshot.docs.forEach(doc => {\n          data.push({\n            ...doc.data(),\n            id: doc.id\n          });\n        });\n        // console.log(\"data\", data);\n        callback && callback(data);\n      });\n      // return api.get();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  getDocWithMultiCondition = (collection, params, callback) => {\n    try {\n      var api;\n      var where = \"\";\n      params.where && params.where.forEach(item => {\n        if (typeof item[1] === \"object\") {\n          where += \".where('\" + item[0] + \".\" + item[1].id + \"','==','\" + item[1].name + \"')\";\n        } else {\n          where += \".where('\" + item[0] + \"','==','\" + item[1] + \"')\";\n        }\n      })\n      let query = `this.db.collection('${collection}')${where}`;\n      // console.log(query);\n      api = eval(query);\n      api.onSnapshot(function (snapshot) {\n        const data = [];\n        snapshot.docs.forEach(doc => {\n          data.push({\n            ...doc.data(),\n            id: doc.id\n          });\n        });\n        if (params.orderBy) {\n          data.sort(function (a, b) {\n            return (params.orderBy[1] === \"asc\" ? 1 : -1) * (a[params.orderBy[0]] - b[params.orderBy[0]])\n          })\n        } else {\n          data.sort(function (a, b) {\n            return b.createdAt - a.createdAt;\n          })\n        }\n        // console.log(\"data\", data);\n        callback && callback(data);\n      });\n      // return api.get();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  // getDocWithMultiConditionSQL = (collection, params,callback) => {\n  //   try {\n  //     var where = \"\";\n  //     if (params.where) {\n  //       where = \" WHERE \";\n  //       params.where.map(function (item, idx) {\n  //         if (typeof item[1] === \"object\") {\n  //           where += (idx === 0 ? \"\" : \" AND \") + \"`\" + item[0] + \"` IN '\" + item[1].id + \"'\";\n  //         } else {\n  //           where += (idx === 0 ? \"\" : \" AND \") + \"`\" + item[0] + \"` = '\" + item[1] + \"'\";\n  //         }\n  //       })\n  //     }\n\n  //     let query = 'SELECT * FROM ' + collection +\n  //       where +\n  //       ' ORDER BY createdAt DESC' +\n  //       ' LIMIT 2';\n  //     console.log(\"QUERY\", query);\n  //     const api = this.fireSQL.query(query);\n  //     api.then(data => {\n  //       console.log(\"data\", data);\n  //       callback && callback(data);\n  //     });\n  //     // return api.get();\n  //   } catch (error) {\n  //     console.error(error);\n  //   }\n  // };\n  getDocWithKeyword = (collection, params, callback) => {\n    try {\n      let query = `SELECT * FROM ${collection} WHERE ${params.where[0]} OR ${params.where[1]}`;\n      // console.log(\"QUERY\", query);\n      const api = this.fireSQL.query(query);\n      api.then(data => {\n        if (params.orderBy) {\n          data.sort(function (a, b) {\n            return (params.orderBy[1] === \"asc\" ? 1 : -1) * (a[params.orderBy[0]] - b[params.orderBy[0]])\n          })\n        } else {\n          data.sort(function (a, b) {\n            return b.createdAt - a.createdAt;\n          })\n        }\n        // console.log(\"data\", data);\n        callback && callback(data);\n      });\n      // return api.get();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n}\n\nexport default new Firebase();","module.exports = {\n  API_URL: \"\",\n  logLev: 3,\n  CLIENT_URL: \"\",\n  firebase: {\n    apiKey: \"AIzaSyAU36mdrDdmCxs6G6ediprtZqoxvv0IJ3Y\",\n    authDomain: \"authen-80412.firebaseapp.com\",\n    databaseURL: \"https://authen-80412.firebaseio.com\",\n    projectId: \"authen-80412\",\n    storageBucket: \"authen-80412.appspot.com\",\n    messagingSenderId: \"889189420817\",\n    appId: \"1:889189420817:web:6934064073ecb692\"\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport { firebase } from \"./context\";\nimport \"./assets/css/App.css\";\nimport { StateProvider } from \"./context\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport \"react-icofont\";\n\nconst loading = () => <div></div>;\n\n// Containers\nconst DefaultLayout = React.lazy(() => import(\"./containers/DefaultLayout\"));\n\n// Pages\nconst Login = React.lazy(() => import(\"./views/Pages/Login\"));\nconst Register = React.lazy(() => import(\"./views/Pages/Register\"));\nconst Page404 = React.lazy(() => import(\"./views/Pages/Page404\"));\nconst Page500 = React.lazy(() => import(\"./views/Pages/Page500\"));\n\nfunction App() {\n  const [firebaseInitialized, setFirebaseInitialized] = useState(false);\n\n  useEffect(() => {\n    firebase.isInitialized().then(val => {\n      setFirebaseInitialized(val);\n    });\n  });\n\n  return firebaseInitialized !== false ? (\n    <StateProvider>\n      <HashRouter>\n        <React.Suspense fallback={loading()}>\n          <Switch>\n            <Route exact path=\"/login\" name=\"Login Page\" render={props => <Login {...props} />} />\n            <Route exact path=\"/register\" name=\"Register Page\" render={props => <Register {...props} />} />\n            <Route exact path=\"/404\" name=\"Page 404\" render={props => <Page404 {...props} />} />\n            <Route exact path=\"/500\" name=\"Page 500\" render={props => <Page500 {...props} />} />\n            <Route path=\"/\" name=\"Home\" render={props => <DefaultLayout {...props} />} />\n          </Switch>\n        </React.Suspense>\n      </HashRouter>\n    </StateProvider>\n  ) : (\n      <div></div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n \nReactDOM.render(<App/>, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}